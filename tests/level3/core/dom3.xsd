<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xs:schema PUBLIC "-//W3C//DTD XMLSCHEMA 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" xmlns:test="http://www.w3.org/2001/DOM-Test-Suite/Level-3" xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-3" targetNamespace="http://www.w3.org/2001/DOM-Test-Suite/Level-3">
<!--
Copyright (c) 2001 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
-->

<!--This schema was generated from  by dom-to-xsd.xsl.-->

<xs:simpleType name="absoluteURI">
<xs:restriction base="xs:anyURI">
<xs:pattern value="[a-zA-Z]*:.*"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="variable">
<xs:annotation>
<xs:documentation>A variable name</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:pattern value="[A-Za-z][A-Za-z0-9]*"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="className">
<xs:annotation>
<xs:documentation>A class name</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:pattern value="[A-Za-z_][A-Za-z0-9_]*"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="stringLiteral">
<xs:annotation>
<xs:documentation>A string literal.  Distinguished from a variable reference by the enclosing double quotes.  The following subset of Java escape sequences are supported, \", \\, \n</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:pattern value="&quot;([^&quot;\\]|\\&quot;|\\\\|\\n)*&quot;"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="literal">
<xs:annotation>
<xs:documentation>The union of accepted literal types</xs:documentation>
</xs:annotation>
<xs:union memberTypes="xs:integer stringLiteral"/>
</xs:simpleType>
<xs:simpleType name="variableOrLiteral">
<xs:union memberTypes="literal variable"/>
</xs:simpleType>
<xs:simpleType name="variableOrStringLiteral">
<xs:union memberTypes="stringLiteral variable"/>
</xs:simpleType>
<xs:simpleType name="variableOrIntLiteral">
<xs:union memberTypes="xs:integer variable"/>
</xs:simpleType>
<xs:simpleType name="variableOrBoolLiteral">
<xs:union memberTypes="xs:boolean variable"/>
</xs:simpleType>
<xs:simpleType name="variableType">
<xs:annotation>
<xs:documentation>All known DOM interfaces plus int, DOMString maybe some others.</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="int"/>
<xs:enumeration value="boolean"/>
<xs:enumeration value="DOMString"/>
<xs:enumeration value="List">
<xs:annotation>
<xs:documentation>A List variable is used to compare two ordered collections, such as the expected and actual child element names.</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="Collection">
<xs:annotation>
<xs:documentation>A collection variable is used to compare two unordered collections, such as the expected and actual attribute names.</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="EventMonitor">
<xs:annotation>
<xs:documentation>An implementation of EventListener that will capture and store all events encountered.</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="ASAttributeDecl"/>
<xs:enumeration value="ASContentModel"/>
<xs:enumeration value="ASDataType"/>
<xs:enumeration value="ASDOMBuilder"/>
<xs:enumeration value="ASElementDecl"/>
<xs:enumeration value="ASEntityDecl"/>
<xs:enumeration value="ASModel"/>
<xs:enumeration value="ASNamedObjectMap"/>
<xs:enumeration value="ASNotationDecl"/>
<xs:enumeration value="ASObject"/>
<xs:enumeration value="ASObjectList"/>
<xs:enumeration value="Attr"/>
<xs:enumeration value="BooleanItem"/>
<xs:enumeration value="CharacterData"/>
<xs:enumeration value="CharacterDataEditAS"/>
<xs:enumeration value="Comment"/>
<xs:enumeration value="ContentItem"/>
<xs:enumeration value="CustomEvent"/>
<xs:enumeration value="Document"/>
<xs:enumeration value="DocumentAS"/>
<xs:enumeration value="DocumentEditAS"/>
<xs:enumeration value="DocumentEvent"/>
<xs:enumeration value="DocumentFragment"/>
<xs:enumeration value="DocumentLS"/>
<xs:enumeration value="DocumentType"/>
<xs:enumeration value="DOMASWriter"/>
<xs:enumeration value="DOMBuilder"/>
<xs:enumeration value="DOMBuilderFilter"/>
<xs:enumeration value="DOMEntityResolver"/>
<xs:enumeration value="DOMError"/>
<xs:enumeration value="DOMImplementation"/>
<xs:enumeration value="DOMImplementationAS"/>
<xs:enumeration value="DOMImplementationLS"/>
<xs:enumeration value="DOMImplementationSource"/>
<xs:enumeration value="DOMInputSource"/>
<xs:enumeration value="DOMLocator"/>
<xs:enumeration value="DOMWriter"/>
<xs:enumeration value="DOMWriterFilter"/>
<xs:enumeration value="Element"/>
<xs:enumeration value="ElementEditAS"/>
<xs:enumeration value="Event"/>
<xs:enumeration value="EventGroup"/>
<xs:enumeration value="EventListener"/>
<xs:enumeration value="EventTarget"/>
<xs:enumeration value="IntegerItem"/>
<xs:enumeration value="Item"/>
<xs:enumeration value="LSLoadEvent"/>
<xs:enumeration value="LSProgressEvent"/>
<xs:enumeration value="Match"/>
<xs:enumeration value="MatchBoolean"/>
<xs:enumeration value="MatchContent"/>
<xs:enumeration value="MatchInteger"/>
<xs:enumeration value="MatchSet"/>
<xs:enumeration value="MatchString"/>
<xs:enumeration value="MouseEvent"/>
<xs:enumeration value="MutationEvent"/>
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="Node"/>
<xs:enumeration value="NodeEditAS"/>
<xs:enumeration value="NodeList"/>
<xs:enumeration value="ParseErrorEvent"/>
<xs:enumeration value="Segment"/>
<xs:enumeration value="StringItem"/>
<xs:enumeration value="Text"/>
<xs:enumeration value="UIEvent"/>
<xs:enumeration value="UserDataHandler"/>
<xs:enumeration value="View"/>
<xs:enumeration value="VisualCharacter"/>
<xs:enumeration value="VisualCharacterRun"/>
<xs:enumeration value="VisualFont"/>
<xs:enumeration value="VisualFormButton"/>
<xs:enumeration value="VisualFormField"/>
<xs:enumeration value="VisualFrame"/>
<xs:enumeration value="VisualImage"/>
<xs:enumeration value="VisualResource"/>
<xs:enumeration value="VisualSegment"/>
<xs:enumeration value="VisualView"/>
<xs:enumeration value="XPathEvaluator"/>
<xs:enumeration value="XPathExpression"/>
<xs:enumeration value="XPathNamespace"/>
<xs:enumeration value="XPathNSResolver"/>
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="loadContentType">
<xs:restriction base="xs:string">
<xs:enumeration value="text/xml">
<xs:annotation>
<xs:documentation>Generic XML</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="image/xml+svg">
<xs:annotation>
<xs:documentation>SVG</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="text/html">
<xs:annotation>
<xs:documentation>HTML</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:element name="test">
<xs:annotation>
<xs:documentation>A test.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice maxOccurs="unbounded" minOccurs="0">
<xs:element ref="hasFeature"/>
<xs:element ref="implementationAttribute"/>
</xs:choice>
<xs:element maxOccurs="unbounded" minOccurs="0" ref="var"/>
<xs:choice>
<xs:element ref="load"/>
<xs:element ref="implementation"/>
</xs:choice>
<xs:group maxOccurs="unbounded" ref="statement"/>
</xs:sequence>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="className" name="name">
<xs:annotation>
<xs:documentation>Used in method name in generated code.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
<xs:key name="var-name">
<xs:selector xpath="test:var"/>
<xs:field xpath="@name"/>
</xs:key>
<xs:keyref refer="var-name" name="var-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@var"/>
</xs:keyref>
<xs:keyref refer="var-name" name="obj-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@obj"/>
</xs:keyref>
<xs:keyref refer="var-name" name="actual-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@actual"/>
</xs:keyref>
<xs:keyref refer="var-name" name="collection-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@collection"/>
</xs:keyref>
<xs:keyref refer="var-name" name="member-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@member"/>
</xs:keyref>
<xs:keyref refer="var-name" name="refChild-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@refChild"/>
</xs:keyref>
<xs:keyref refer="var-name" name="doctype-attrib">
<xs:selector xpath=".//*"/>
<xs:field xpath="@doctype"/>
</xs:keyref>
</xs:element>
<xs:element name="suite.member">
<xs:annotation>
<xs:documentation>A member of a test suite, either a individual test or another suite.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="required" type="xs:anyURI" name="href"/>
</xs:complexType>
</xs:element>
<xs:element name="suite">
<xs:annotation>
<xs:documentation>A suite of tests</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice maxOccurs="unbounded" minOccurs="0">
<xs:element ref="hasFeature"/>
<xs:element ref="implementationAttribute"/>
</xs:choice>
<xs:choice maxOccurs="unbounded" minOccurs="0">
<xs:element ref="suite.member"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="className" name="name">
<xs:annotation>
<xs:documentation>Used in method name in generated code.</xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute use="optional" type="loadContentType" name="contentType">
<xs:annotation>
<xs:documentation>Content type used to select the appropriate test documents.  Value propagates from enclosing suites.
                            For example, loading "file1" when contextType="text/xml" should load "staff.xml".  If contentType="image/xsl+svg", file1.svg would be loaded.
                         </xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="package">
<xs:annotation>
<xs:documentation>A package of tests in one resource</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice maxOccurs="unbounded" minOccurs="0">
<xs:element ref="test"/>
<xs:element ref="suite"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="comment">
<xs:annotation>
<xs:documentation>Injects comment into generated code.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:simpleContent>
<xs:extension base="xs:string">
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:extension>
</xs:simpleContent>
</xs:complexType>
</xs:element>
<xs:element name="wait">
<xs:annotation>
<xs:documentation>Attempts to pause for a specified period</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="xs:positiveInteger" name="milliseconds"/>
</xs:complexType>
</xs:element>
<xs:element name="append">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="collection"/>
<xs:attribute use="required" type="variable" name="obj"/>
</xs:complexType>
</xs:element>
<xs:complexType name="unaryAssignment">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrLiteral" name="value"/>
</xs:complexType>
<xs:element name="assign">
<xs:annotation>
<xs:documentation>Assigns the specified value or condition to the a variable.  If both are specified, the value will be AND'd with the condition.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:group minOccurs="0" ref="condition"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrLiteral" name="value"/>
</xs:complexType>
</xs:element>
<xs:element type="unaryAssignment" name="increment"/>
<xs:element type="unaryAssignment" name="decrement"/>
<xs:complexType name="binaryAssignment">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrLiteral" name="op1"/>
<xs:attribute use="required" type="variableOrLiteral" name="op2"/>
</xs:complexType>
<xs:element type="binaryAssignment" name="plus"/>
<xs:element type="binaryAssignment" name="subtract"/>
<xs:element type="binaryAssignment" name="mult"/>
<xs:element type="binaryAssignment" name="divide"/>
<xs:complexType name="sinkMethod">
<xs:sequence>
<xs:element ref="var" minOccurs="0" maxOccurs="unbounded"/>
<xs:group ref="statement" maxOccurs="unbounded"/>
</xs:sequence>
</xs:complexType>
<xs:element name="return">
    <xs:complexType>
    <xs:sequence/>
    <xs:attribute name="value" type="variableOrLiteral" use="optional"/>
    </xs:complexType>
</xs:element>
<xs:complexType name="sinkAttribute">
    <xs:sequence/>
    <xs:attribute use="required" type="literal" name="value"/>
</xs:complexType>
<xs:element name="var">
<xs:annotation>
<xs:documentation>Declare and optionally initialize a variable.  [Tenative] All variables must be declared.  Use instanceOf for type assertions.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:choice minOccurs="0">
<xs:element maxOccurs="unbounded" ref="member"/>
<xs:sequence>
    <xs:element type="sinkMethod" name="handleEvent"/>
</xs:sequence>
<xs:sequence>
    <xs:element type="sinkMethod" name="resolveEntity"/>
</xs:sequence>
<xs:sequence>
    <xs:element type="sinkMethod" name="startNode"/>
    <xs:element type="sinkMethod" name="endNode"/>
    <xs:element type="sinkAttribute" name="whatToShow"/>
</xs:sequence>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="name"/>
<xs:attribute use="required" type="variableType" name="type"/>
<xs:attribute use="optional" type="literal" name="value"/>
<xs:attribute use="optional" type="xs:boolean" name="isNull"/>
</xs:complexType>
</xs:element>
<xs:element type="literal" name="member">
<xs:annotation>
<xs:documentation>Member children are used to initialize List and Collection types.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="load">
<xs:annotation>
<xs:documentation>Loads the document declared in the corresponding document element.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="optional" type="xs:anyURI" name="href"/>
<xs:attribute use="optional" type="variable" name="obj"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="uri"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
<xs:attribute use="required" type="xs:boolean" name="willBeModified">
<xs:annotation>
<xs:documentation>If true then this test may modify the document, so a fresh copy should be loaded instead of a cached copy.</xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="implementation">
<xs:annotation>
<xs:documentation>Gets a DOMImplementation.  If the obj attribute is not specified, it creates a default implementation as determined by the test framework.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="optional" type="variable" name="obj"/>
</xs:complexType>
</xs:element>
<xs:element name="metadata">
<xs:complexType>
<xs:choice maxOccurs="unbounded" minOccurs="0">
<xs:element ref="metadata"/>
<xs:element type="rdf-statement" name="title">
<xs:annotation>
<xs:documentation>Name given to the test.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element ref="creator"/>
<xs:element ref="subject"/>
<xs:element ref="description"/>
<xs:element ref="contributor"/>
<xs:element ref="date"/>
<xs:element ref="source"/>
<xs:element ref="relation"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="optional" type="xs:anyURI" name="about"/>
</xs:complexType>
</xs:element>
<xs:complexType name="rdf-statement">
<xs:simpleContent>
<xs:extension base="xs:string">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="optional" type="absoluteURI" name="resource"/>
<xs:attribute use="optional" type="absoluteURI" name="type"/>
</xs:extension>
</xs:simpleContent>
</xs:complexType>
<xs:element type="rdf-statement" name="creator">
<xs:annotation>
<xs:documentation>Entity primarily responsible for making the test definition.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="rdf-statement" name="subject">
<xs:annotation>
<xs:documentation>One topic of the test.  May be repeated.  Preferably, a URI identifing a particular section of the DOM specification.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="rdf-statement" name="description">
<xs:annotation>
<xs:documentation>A free-text account of the test.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="rdf-statement" name="contributor">
<xs:annotation>
<xs:documentation>An entity responsible for making contributions to the test.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:simpleType name="dateQualifier">
<xs:restriction base="xs:string">
<xs:enumeration value="created"/>
<xs:enumeration value="valid"/>
<xs:enumeration value="available"/>
<xs:enumeration value="issued"/>
<xs:enumeration value="modified"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="date">
<xs:annotation>
<xs:documentation>A reference to a rest from which the current test is derived.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:simpleContent>
<xs:extension base="xs:date">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute type="dateQualifier" use="required" name="qualifier"/>
</xs:extension>
</xs:simpleContent>
</xs:complexType>
</xs:element>
<xs:element type="rdf-statement" name="source">
<xs:annotation>
<xs:documentation>A reference to a rest from which the current test is derived.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:simpleType name="relationQualifier">
<xs:restriction base="xs:string">
<xs:enumeration value="isVersionOf"/>
<xs:enumeration value="hasVersion"/>
<xs:enumeration value="isReplacedBy"/>
<xs:enumeration value="isRequiredBy"/>
<xs:enumeration value="requires"/>
<xs:enumeration value="isPartOf"/>
<xs:enumeration value="hasPart"/>
<xs:enumeration value="isReferenceBy"/>
<xs:enumeration value="references"/>
</xs:restriction>
</xs:simpleType>
<xs:element name="relation">
<xs:annotation>
<xs:documentation>A reference to a rest from which the current test is derived.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:simpleContent>
<xs:extension base="xs:string">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="optional" type="absoluteURI" name="resource"/>
<xs:attribute use="optional" type="absoluteURI" name="type"/>
<xs:attribute type="relationQualifier" use="required" name="qualifier"/>
</xs:extension>
</xs:simpleContent>
</xs:complexType>
</xs:element>
<xs:complexType name="assertTrueFalse">
<xs:sequence>
<xs:group minOccurs="0" ref="condition"/>
</xs:sequence>
<xs:attribute use="required" type="xs:ID" name="id"/>
<xs:attribute use="optional" type="variable" name="actual"/>
</xs:complexType>
<xs:element type="assertTrueFalse" name="assertTrue">
<xs:annotation>
<xs:documentation>Will result in the test failing unless the condition expression content and  the value of the variable specified in the "actual" attribute are either absent or true.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="assertTrueFalse" name="assertFalse">
<xs:annotation>
<xs:documentation>Will result in the test failing unless the condition expression content or the value of the variable specified in the "actual" attribute is false.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:complexType name="unaryAssertion">
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
<xs:element type="unaryAssertion" name="assertNull"/>
<xs:element type="unaryAssertion" name="assertNotNull"/>
<xs:complexType name="comparisonAssertion">
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variableOrLiteral" name="expected"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
<xs:element name="assertSame">
<xs:annotation>
<xs:documentation>This asserts that the parameters reference the same object.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variable" name="expected"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertInstanceOf">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableType" name="type"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertSize">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="collection"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="size"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:complexType name="comparisonAssertionWithCase">
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variableOrLiteral" name="expected"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
<xs:attribute type="ignoreCaseEnum" use="required" name="ignoreCase"/>
</xs:complexType>
<xs:element type="comparisonAssertionWithCase" name="assertEquals"/>
<xs:element type="comparisonAssertionWithCase" name="assertNotEquals"/>
<xs:element name="assertEventCount">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
</xs:sequence>
<xs:attribute use="optional" type="variableOrIntLiteral" name="atCount"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="captureCount"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="bubbleCount"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="totalCount"/>
<xs:attribute use="required" type="variable" name="monitor"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertURIEquals">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
</xs:sequence>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="scheme"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="path"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="host"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="file"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="query"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="fragment"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="isAbsolute"/>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:group name="framework-assertion">
<xs:choice>
<xs:element ref="assertTrue"/>
<xs:element ref="assertFalse"/>
<xs:element ref="assertNull"/>
<xs:element ref="assertNotNull"/>
<xs:element ref="assertEquals"/>
<xs:element ref="assertNotEquals"/>
<xs:element ref="assertSame"/>
<xs:element ref="assertInstanceOf"/>
<xs:element ref="assertSize"/>
<xs:element ref="assertEventCount"/>
<xs:element ref="assertURIEquals"/>
</xs:choice>
</xs:group>
<xs:group name="framework-statement">
<xs:choice>
<xs:element ref="assign"/>
<xs:element ref="increment"/>
<xs:element ref="decrement"/>
<xs:element ref="append"/>
<xs:element ref="plus"/>
<xs:element ref="subtract"/>
<xs:element ref="mult"/>
<xs:element ref="divide"/>
<xs:element ref="load"/>
<xs:element ref="implementation"/>
<xs:element ref="hasFeature"/>
<xs:element ref="if"/>
<xs:element ref="while"/>
<xs:element ref="for-each"/>
<xs:element ref="comment"/>
<xs:element ref="return"/>
<xs:element ref="EventMonitor.setUserObj"/>
<xs:element ref="EventMonitor.getAtEvents"/>
<xs:element ref="EventMonitor.getCaptureEvents"/>
<xs:element ref="EventMonitor.getBubbleEvents"/>
<xs:element ref="EventMonitor.getAllEvents"/>
<xs:element ref="wait"/>
</xs:choice>
</xs:group>
<xs:complexType name="comparison">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variableOrLiteral" name="expected"/>
</xs:complexType>
<xs:element name="same">
<xs:annotation>
<xs:documentation>Object identity comparison</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variable" name="expected"/>
</xs:complexType>
</xs:element>
<xs:simpleType name="ignoreCaseEnum">
<xs:restriction base="xs:string">
<xs:enumeration value="true"/>
<xs:enumeration value="false"/>
<xs:enumeration value="auto">
<xs:annotation>
<xs:documentation>If auto, the comparision will perform case folding 
                            as appropriate for the content type.  Case insensitive for contentType="text/html",
                            case sensitive for all others.</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="comparisonWithCase">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="actual"/>
<xs:attribute use="required" type="variableOrLiteral" name="expected"/>
<xs:attribute type="ignoreCaseEnum" use="required" name="ignoreCase"/>
</xs:complexType>
<xs:element type="comparisonWithCase" name="equals">
<xs:annotation>
<xs:documentation>Value comparison, element-wise on collections.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="comparisonWithCase" name="notEquals"/>
<xs:element type="comparison" name="less">
<xs:annotation>
<xs:documentation>Actual is less than to expected.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="comparison" name="lessOrEquals">
<xs:annotation>
<xs:documentation>Actual is less than or equal to expected.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="comparison" name="greaterOrEquals">
<xs:annotation>
<xs:documentation>Actual is greater than or equal to expected.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element type="comparison" name="greater">
<xs:annotation>
<xs:documentation>Actual is greater than expected.</xs:documentation>
</xs:annotation>
</xs:element>
<xs:complexType name="unaryComparison">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
</xs:complexType>
<xs:element type="unaryComparison" name="isNull"/>
<xs:element type="unaryComparison" name="notNull"/>
<xs:element name="instanceOf">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableType" name="type"/>
</xs:complexType>
</xs:element>
<xs:element name="hasSize">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="expected"/>
</xs:complexType>
</xs:element>
<xs:element name="implementationAttribute">
<xs:complexType>
<xs:attribute use="required" name="name">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="validating"/>
<xs:enumeration value="coalescing"/>
<xs:enumeration value="expandEntityReferences"/>
<xs:enumeration value="namespaceAware"/>
<xs:enumeration value="ignoringElementContentWhitespace"/>
<xs:enumeration value="signed"/>
<xs:enumeration value="hasNullString"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
<xs:attribute type="xs:boolean" use="required" name="value"/>
<xs:attribute type="xs:ID" use="optional" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="hasFeature">
<xs:annotation>
<xs:documentation>hasFeature is used both as a property of a DOMImplementation (when obj and var attributes are provided) and as a implementationCondition.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="stringLiteral" name="feature"/>
<xs:attribute use="optional" type="stringLiteral" name="version"/>
<xs:attribute use="optional" type="xs:boolean" name="value"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variable" name="obj"/>
</xs:complexType>
</xs:element>
<xs:element name="not">
<xs:complexType>
<xs:group ref="condition"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="isTrue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="value"/>
</xs:complexType>
</xs:element>
<xs:element name="isFalse">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="value"/>
</xs:complexType>
</xs:element>
<xs:element name="or">
<xs:complexType>
<xs:group maxOccurs="unbounded" minOccurs="2" ref="condition"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="and">
<xs:complexType>
<xs:group maxOccurs="unbounded" minOccurs="2" ref="condition"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="xor">
<xs:complexType>
<xs:group maxOccurs="2" minOccurs="2" ref="condition"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:group name="condition">
<xs:choice>
<xs:element ref="same"/>
<xs:element ref="equals"/>
<xs:element ref="notEquals"/>
<xs:element ref="less"/>
<xs:element ref="lessOrEquals"/>
<xs:element ref="greater"/>
<xs:element ref="greaterOrEquals"/>
<xs:element ref="isNull"/>
<xs:element ref="notNull"/>
<xs:element ref="and"/>
<xs:element ref="or"/>
<xs:element ref="xor"/>
<xs:element ref="instanceOf"/>
<xs:element ref="isTrue"/>
<xs:element ref="isFalse"/>
<xs:element ref="hasSize"/>
<xs:element ref="hasFeature"/>
<xs:element ref="implementationAttribute"/>
<xs:element ref="contentType"/>
</xs:choice>
</xs:group>
<xs:element name="else">
<xs:complexType>
<xs:group maxOccurs="unbounded" ref="statement"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="if">
<xs:complexType>
<xs:sequence>
<xs:group ref="condition"/>
<xs:group maxOccurs="unbounded" ref="statement"/>
<xs:element minOccurs="0" ref="else"/>
</xs:sequence>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="while">
<xs:complexType>
<xs:sequence>
<xs:group ref="condition"/>
<xs:group maxOccurs="unbounded" ref="statement"/>
</xs:sequence>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="for-each">
<xs:complexType>
<xs:group maxOccurs="unbounded" minOccurs="0" ref="statement"/>
<xs:attribute use="required" type="variable" name="collection"/>
<xs:attribute use="required" type="variable" name="member"/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="EventMonitor.setUserObj">
<xs:annotation>
<xs:documentation>Assignes an object to a userObj variable that is accessible from the handleEvent handler of the specified EventMonitor.</xs:documentation>
</xs:annotation>
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="userObj"/>
</xs:complexType>
</xs:element>
<xs:complexType name="EventMonitorAccessor">
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="monitor"/>
<xs:attribute use="required" type="variable" name="var"/>
</xs:complexType>
<xs:element type="EventMonitorAccessor" name="EventMonitor.getAtEvents"/>
<xs:element type="EventMonitorAccessor" name="EventMonitor.getCaptureEvents"/>
<xs:element type="EventMonitorAccessor" name="EventMonitor.getBubbleEvents"/>
<xs:element type="EventMonitorAccessor" name="EventMonitor.getAllEvents"/>
<xs:group name="statement">
<xs:choice>
<xs:group ref="framework-statement"/>
<xs:group ref="assertion"/>
<xs:element ref="abstractSchema"/>
<xs:element ref="activeASModel"/>
<xs:element ref="actualEncoding"/>
<xs:element ref="altKey"/>
<xs:element ref="ASAttributeDecls"/>
<xs:element ref="ASContentModel"/>
<xs:element ref="ASObjectType"/>
<xs:element ref="async"/>
<xs:element ref="attrChange"/>
<xs:element ref="attributeDecls"/>
<xs:element ref="attributes"/>
<xs:element ref="attrName"/>
<xs:element ref="backgroundColor"/>
<xs:element ref="baseURI"/>
<xs:element ref="booleanValue"/>
<xs:element ref="bottomOffset"/>
<xs:element ref="boundASModels"/>
<xs:element ref="bubbles"/>
<xs:element ref="button"/>
<xs:element ref="byteStream"/>
<xs:element ref="cancelable"/>
<xs:element ref="characterStream"/>
<xs:element ref="childNodes"/>
<xs:element ref="clientX"/>
<xs:element ref="clientY"/>
<xs:element ref="columnNumber"/>
<xs:element ref="container"/>
<xs:element ref="contentModelDecls"/>
<xs:element ref="contentType"/>
<xs:element ref="continuousValidityChecking"/>
<xs:element ref="criteria"/>
<xs:element ref="ctrlKey"/>
<xs:element ref="currentTarget"/>
<xs:element ref="data"/>
<xs:element ref="dataType"/>
<xs:element ref="DataType"/>
<xs:element ref="DataValue"/>
<xs:element ref="defaultType"/>
<xs:element ref="definedElementTypes"/>
<xs:element ref="detail"/>
<xs:element ref="doctype"/>
<xs:element ref="documentElement"/>
<xs:element ref="documentURI"/>
<xs:element ref="elementDecls"/>
<xs:element ref="elementType"/>
<xs:element ref="embedded"/>
<xs:element ref="encoding"/>
<xs:element ref="endNode"/>
<xs:element ref="endOffset"/>
<xs:element ref="entities"/>
<xs:element ref="entityDecls"/>
<xs:element ref="entityResolver"/>
<xs:element ref="entityType"/>
<xs:element ref="entityValue"/>
<xs:element ref="enumAttr"/>
<xs:element ref="error"/>
<xs:element ref="errorHandler"/>
<xs:element ref="errorNode"/>
<xs:element ref="eventPhase"/>
<xs:element ref="exists"/>
<xs:element ref="filter"/>
<xs:element ref="firstChild"/>
<xs:element ref="fontHeight"/>
<xs:element ref="fontName"/>
<xs:element ref="fontScheme"/>
<xs:element ref="foregroundColor"/>
<xs:element ref="formValue"/>
<xs:element ref="height"/>
<xs:element ref="hint"/>
<xs:element ref="horizontalDPI"/>
<xs:element ref="imageURL"/>
<xs:element ref="inputSource"/>
<xs:element ref="internalSubset"/>
<xs:element ref="invalidIteratorState"/>
<xs:element ref="isLoaded"/>
<xs:element ref="isPCDataOnly"/>
<xs:element ref="isPressed"/>
<xs:element ref="isWhitespaceOnly"/>
<xs:element ref="lastChild"/>
<xs:element ref="lastEncoding"/>
<xs:element ref="leftOffset"/>
<xs:element ref="length"/>
<xs:element ref="lineNumber"/>
<xs:element ref="listOperator"/>
<xs:element ref="localName"/>
<xs:element ref="location"/>
<xs:element ref="matchContaining"/>
<xs:element ref="matchContainsSelected"/>
<xs:element ref="matchContainsVisible"/>
<xs:element ref="matchContent"/>
<xs:element ref="matchFontName"/>
<xs:element ref="matchInside"/>
<xs:element ref="matchNode"/>
<xs:element ref="matchNodeR"/>
<xs:element ref="matchOffset"/>
<xs:element ref="matchOffsetR"/>
<xs:element ref="matchPosition"/>
<xs:element ref="matchRange"/>
<xs:element ref="matchX"/>
<xs:element ref="matchXR"/>
<xs:element ref="matchY"/>
<xs:element ref="matchYR"/>
<xs:element ref="maxOccurs"/>
<xs:element ref="message"/>
<xs:element ref="metaKey"/>
<xs:element ref="minOccurs"/>
<xs:element ref="name"/>
<xs:element ref="NamespaceAware"/>
<xs:element ref="namespaceURI"/>
<xs:element ref="newDocument"/>
<xs:element ref="newLine"/>
<xs:element ref="newValue"/>
<xs:element ref="nextSibling"/>
<xs:element ref="node"/>
<xs:element ref="nodeName"/>
<xs:element ref="nodeType"/>
<xs:element ref="nodeValue"/>
<xs:element ref="notationDecls"/>
<xs:element ref="notations"/>
<xs:element ref="numberValue"/>
<xs:element ref="objectName"/>
<xs:element ref="offset"/>
<xs:element ref="order"/>
<xs:element ref="ownerASModel"/>
<xs:element ref="ownerDocument"/>
<xs:element ref="ownerElement"/>
<xs:element ref="ownerElements"/>
<xs:element ref="parentNode"/>
<xs:element ref="position"/>
<xs:element ref="prefix"/>
<xs:element ref="previousSibling"/>
<xs:element ref="prevValue"/>
<xs:element ref="publicId"/>
<xs:element ref="relatedException"/>
<xs:element ref="relatedNode"/>
<xs:element ref="relatedTarget"/>
<xs:element ref="resultType"/>
<xs:element ref="rightOffset"/>
<xs:element ref="schemaType"/>
<xs:element ref="screenX"/>
<xs:element ref="screenY"/>
<xs:element ref="selected"/>
<xs:element ref="severity"/>
<xs:element ref="shiftKey"/>
<xs:element ref="singleNodeValue"/>
<xs:element ref="snapshotLength"/>
<xs:element ref="specified"/>
<xs:element ref="standalone"/>
<xs:element ref="startNode"/>
<xs:element ref="startOffset"/>
<xs:element ref="strictErrorChecking"/>
<xs:element ref="strictMixedContent"/>
<xs:element ref="stringData"/>
<xs:element ref="stringValue"/>
<xs:element ref="subModels"/>
<xs:element ref="systemId"/>
<xs:element ref="tagName"/>
<xs:element ref="target"/>
<xs:element name="test">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Match"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element ref="textContent"/>
<xs:element ref="timeStamp"/>
<xs:element ref="topOffset"/>
<xs:element ref="totalSize"/>
<xs:element ref="type"/>
<xs:element ref="uri"/>
<xs:element ref="usage"/>
<xs:element ref="value"/>
<xs:element ref="version"/>
<xs:element ref="verticalDPI"/>
<xs:element ref="view"/>
<xs:element ref="visible"/>
<xs:element ref="whatToShow"/>
<xs:element ref="width"/>
<xs:element ref="abort"/>
<xs:element ref="addAS"/>
<xs:element ref="addASAttributeDecl"/>
<xs:element ref="addASModel"/>
<xs:element ref="addEventListener"/>
<xs:element ref="addGroupedEventListener"/>
<xs:element ref="addItem"/>
<xs:element ref="addMatch"/>
<xs:element ref="adoptNode"/>
<xs:element ref="appendChild"/>
<xs:element ref="appendData"/>
<xs:element ref="appendsubModel"/>
<xs:element ref="canAppendChild"/>
<xs:element ref="canAppendData"/>
<xs:element ref="canDeleteData"/>
<xs:element ref="canInsertBefore"/>
<xs:element ref="canInsertData"/>
<xs:element ref="canRemoveAttribute"/>
<xs:element ref="canRemoveAttributeNode"/>
<xs:element ref="canRemoveAttributeNS"/>
<xs:element ref="canRemoveChild"/>
<xs:element ref="canReplaceChild"/>
<xs:element ref="canReplaceData"/>
<xs:element ref="canSetAttribute"/>
<xs:element ref="canSetAttributeNode"/>
<xs:element ref="canSetAttributeNS"/>
<xs:element ref="canSetData"/>
<xs:element ref="canSetFeature"/>
<xs:element ref="canSetNormalizationFeature"/>
<xs:element ref="canTrigger"/>
<xs:element ref="cloneASObject"/>
<xs:element ref="cloneNode"/>
<xs:element ref="compareTreePosition"/>
<xs:element ref="contentType"/>
<xs:element ref="createAS"/>
<xs:element ref="createASAttributeDecl"/>
<xs:element ref="createASContentModel"/>
<xs:element ref="createASElementDecl"/>
<xs:element ref="createASEntityDecl"/>
<xs:element ref="createASNotationDecl"/>
<xs:element ref="createAttribute"/>
<xs:element ref="createAttributeNS"/>
<xs:element ref="createBooleanItem"/>
<xs:element ref="createCDATASection"/>
<xs:element ref="createComment"/>
<xs:element ref="createContentItem"/>
<xs:element ref="createDocument"/>
<xs:element ref="createDocumentFragment"/>
<xs:element ref="createDocumentType"/>
<xs:element ref="createDOMBuilder"/>
<xs:element ref="createDOMInputSource"/>
<xs:element ref="createDOMWriter"/>
<xs:element ref="createElement"/>
<xs:element ref="createElementNS"/>
<xs:element ref="createEntityReference"/>
<xs:element ref="createEvent"/>
<xs:element ref="createEventGroup"/>
<xs:element ref="createExpression"/>
<xs:element ref="createIntegerItem"/>
<xs:element ref="createMatchBoolean"/>
<xs:element ref="createMatchContent"/>
<xs:element ref="createMatchInteger"/>
<xs:element ref="createMatchSet"/>
<xs:element ref="createMatchString"/>
<xs:element ref="createNSResolver"/>
<xs:element ref="createProcessingInstruction"/>
<xs:element ref="createSegment"/>
<xs:element ref="createStringItem"/>
<xs:element ref="createTextNode"/>
<xs:element ref="createVisualCharacter"/>
<xs:element ref="createVisualCharacterRun"/>
<xs:element ref="createVisualFormButton"/>
<xs:element ref="createVisualFormField"/>
<xs:element ref="createVisualFrame"/>
<xs:element ref="createVisualImage"/>
<xs:element ref="deleteData"/>
<xs:element ref="dispatchEvent"/>
<xs:element ref="endNode"/>
<xs:element ref="evaluate"/>
<xs:element ref="getASModels"/>
<xs:element ref="getAttribute"/>
<xs:element ref="getAttributeList"/>
<xs:element ref="getAttributeNode"/>
<xs:element ref="getAttributeNodeNS"/>
<xs:element ref="getAttributeNS"/>
<xs:element ref="getBooleanProperty"/>
<xs:element ref="getChildElements"/>
<xs:element ref="getContentPropertyNode"/>
<xs:element ref="getContentPropertyOffset"/>
<xs:element ref="getDOMImplementation"/>
<xs:element ref="getElementById"/>
<xs:element ref="getElementDecl"/>
<xs:element ref="getElementsByTagName"/>
<xs:element ref="getElementsByTagNameNS"/>
<xs:element ref="getFeature"/>
<xs:element ref="getIntegerProperty"/>
<xs:element ref="getInterface"/>
<xs:element ref="getInternalAS"/>
<xs:element ref="getItem"/>
<xs:element ref="getMatch"/>
<xs:element ref="getNamedItem"/>
<xs:element ref="getNamedItemNS"/>
<xs:element ref="getNext"/>
<xs:element ref="getNormalizationFeature"/>
<xs:element ref="getParentElements"/>
<xs:element ref="getStringProperty"/>
<xs:element ref="getUserData"/>
<xs:element ref="handle"/>
<xs:element ref="handleEvent"/>
<xs:element ref="hasAttribute"/>
<xs:element ref="hasAttributeNS"/>
<xs:element ref="hasAttributes"/>
<xs:element ref="hasChildNodes"/>
<xs:element ref="importASObject"/>
<xs:element ref="importNode"/>
<xs:element ref="initEvent"/>
<xs:element ref="initMouseEvent"/>
<xs:element ref="initMutationEvent"/>
<xs:element ref="initUIEvent"/>
<xs:element ref="insertASObject"/>
<xs:element ref="insertBefore"/>
<xs:element ref="insertBeforeSubModel"/>
<xs:element ref="insertData"/>
<xs:element ref="isElementDefined"/>
<xs:element ref="isElementDefinedNS"/>
<xs:element ref="isEqualNode"/>
<xs:element ref="isNodeValid"/>
<xs:element ref="isRegisteredHere"/>
<xs:element ref="isSameEventGroup"/>
<xs:element ref="isSameNode"/>
<xs:element ref="isSupported"/>
<xs:element ref="item"/>
<xs:element ref="iterateNext"/>
<xs:element ref="load"/>
<xs:element ref="loadXML"/>
<xs:element ref="lookupNamespacePrefix"/>
<xs:element ref="lookupNamespaceURI"/>
<xs:element ref="matchFirstSegment"/>
<xs:element ref="matchSegment"/>
<xs:element ref="normalize"/>
<xs:element ref="normalizeDocument"/>
<xs:element ref="parse"/>
<xs:element ref="parseASInputSource"/>
<xs:element ref="parseASURI"/>
<xs:element ref="parseURI"/>
<xs:element ref="parseWithContext"/>
<xs:element ref="preventDefault"/>
<xs:element ref="removeAS"/>
<xs:element ref="removeASAttributeDecl"/>
<xs:element ref="removeAttribute"/>
<xs:element ref="removeAttributeNode"/>
<xs:element ref="removeAttributeNS"/>
<xs:element ref="removeChild"/>
<xs:element ref="removeEventListener"/>
<xs:element ref="removeGroupedEventListener"/>
<xs:element ref="removeNamedItem"/>
<xs:element ref="removeNamedItemNS"/>
<xs:element ref="removesubModel"/>
<xs:element ref="renameNode"/>
<xs:element ref="replaceChild"/>
<xs:element ref="replaceData"/>
<xs:element ref="resolveEntity"/>
<xs:element ref="saveXML"/>
<xs:element ref="select"/>
<xs:element ref="setAttribute"/>
<xs:element ref="setAttributeNode"/>
<xs:element ref="setAttributeNodeNS"/>
<xs:element ref="setAttributeNS"/>
<xs:element ref="setCurrentTarget"/>
<xs:element ref="setEventPhase"/>
<xs:element ref="setFeature"/>
<xs:element ref="setInternalAS"/>
<xs:element ref="setNamedItem"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="setNormalizationFeature"/>
<xs:element ref="setUserData"/>
<xs:element ref="snapshotItem"/>
<xs:element ref="splitText"/>
<xs:element ref="startNode"/>
<xs:element ref="stopPropagation"/>
<xs:element ref="substringData"/>
<xs:element ref="validate"/>
<xs:element ref="writeASModel"/>
<xs:element ref="writeNode"/>
<xs:element ref="writeToString"/>
</xs:choice>
</xs:group>
<xs:element name="assertDOMException">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice>
<xs:element ref="INDEX_SIZE_ERR"/>
<xs:element ref="DOMSTRING_SIZE_ERR"/>
<xs:element ref="HIERARCHY_REQUEST_ERR"/>
<xs:element ref="WRONG_DOCUMENT_ERR"/>
<xs:element ref="INVALID_CHARACTER_ERR"/>
<xs:element ref="NO_DATA_ALLOWED_ERR"/>
<xs:element ref="NO_MODIFICATION_ALLOWED_ERR"/>
<xs:element ref="NOT_FOUND_ERR"/>
<xs:element ref="NOT_SUPPORTED_ERR"/>
<xs:element ref="INUSE_ATTRIBUTE_ERR"/>
<xs:element ref="INVALID_STATE_ERR"/>
<xs:element ref="SYNTAX_ERR"/>
<xs:element ref="INVALID_MODIFICATION_ERR"/>
<xs:element ref="NAMESPACE_ERR"/>
<xs:element ref="INVALID_ACCESS_ERR"/>
<xs:element ref="VALIDATION_ERR"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INDEX_SIZE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="substringData"/>
<xs:element ref="insertData"/>
<xs:element ref="deleteData"/>
<xs:element ref="replaceData"/>
<xs:element ref="splitText"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="DOMSTRING_SIZE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="nodeValue"/>
<xs:element ref="textContent"/>
<xs:element ref="data"/>
<xs:element ref="substringData"/>
<xs:element ref="writeToString"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="HIERARCHY_REQUEST_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="insertBefore"/>
<xs:element ref="replaceChild"/>
<xs:element ref="appendChild"/>
<xs:element ref="setNamedItem"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="parseWithContext"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="WRONG_DOCUMENT_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="createDocument"/>
<xs:element ref="insertBefore"/>
<xs:element ref="replaceChild"/>
<xs:element ref="appendChild"/>
<xs:element ref="setNamedItem"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="setAttributeNode"/>
<xs:element ref="setAttributeNodeNS"/>
<xs:element ref="saveXML"/>
<xs:element ref="evaluate"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INVALID_CHARACTER_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="prefix"/>
<xs:element ref="createDocumentType"/>
<xs:element ref="createDocument"/>
<xs:element ref="createElement"/>
<xs:element ref="createProcessingInstruction"/>
<xs:element ref="createAttribute"/>
<xs:element ref="createEntityReference"/>
<xs:element ref="importNode"/>
<xs:element ref="createElementNS"/>
<xs:element ref="createAttributeNS"/>
<xs:element ref="setAttribute"/>
<xs:element ref="setAttributeNS"/>
<xs:element ref="createASElementDecl"/>
<xs:element ref="createASAttributeDecl"/>
<xs:element ref="createASNotationDecl"/>
<xs:element ref="createASEntityDecl"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NO_DATA_ALLOWED_ERR">
<xs:complexType>
<xs:choice/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NO_MODIFICATION_ALLOWED_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="nodeValue"/>
<xs:element ref="prefix"/>
<xs:element ref="textContent"/>
<xs:element ref="data"/>
<xs:element ref="value"/>
<xs:element ref="adoptNode"/>
<xs:element ref="insertBefore"/>
<xs:element ref="replaceChild"/>
<xs:element ref="removeChild"/>
<xs:element ref="appendChild"/>
<xs:element ref="setNamedItem"/>
<xs:element ref="removeNamedItem"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="removeNamedItemNS"/>
<xs:element ref="appendData"/>
<xs:element ref="insertData"/>
<xs:element ref="deleteData"/>
<xs:element ref="replaceData"/>
<xs:element ref="setAttribute"/>
<xs:element ref="removeAttribute"/>
<xs:element ref="setAttributeNode"/>
<xs:element ref="removeAttributeNode"/>
<xs:element ref="setAttributeNS"/>
<xs:element ref="removeAttributeNS"/>
<xs:element ref="setAttributeNodeNS"/>
<xs:element ref="splitText"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NOT_FOUND_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="setNormalizationFeature"/>
<xs:element ref="getNormalizationFeature"/>
<xs:element ref="insertBefore"/>
<xs:element ref="replaceChild"/>
<xs:element ref="removeChild"/>
<xs:element ref="removeNamedItem"/>
<xs:element ref="removeNamedItemNS"/>
<xs:element ref="removeAttributeNode"/>
<xs:element ref="getElementDecl"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NOT_SUPPORTED_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="version"/>
<xs:element ref="createDocumentType"/>
<xs:element ref="createDocument"/>
<xs:element ref="createCDATASection"/>
<xs:element ref="createProcessingInstruction"/>
<xs:element ref="createEntityReference"/>
<xs:element ref="importNode"/>
<xs:element ref="createElementNS"/>
<xs:element ref="createAttributeNS"/>
<xs:element ref="adoptNode"/>
<xs:element ref="setNormalizationFeature"/>
<xs:element ref="renameNode"/>
<xs:element ref="insertBefore"/>
<xs:element ref="replaceChild"/>
<xs:element ref="removeChild"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="setAttributeNS"/>
<xs:element ref="setAttributeNodeNS"/>
<xs:element ref="matchFirstSegment"/>
<xs:element ref="getIntegerProperty"/>
<xs:element ref="getStringProperty"/>
<xs:element ref="getBooleanProperty"/>
<xs:element ref="getContentPropertyNode"/>
<xs:element ref="getContentPropertyOffset"/>
<xs:element ref="createEvent"/>
<xs:element ref="setInternalAS"/>
<xs:element ref="evaluate"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INUSE_ATTRIBUTE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="setNamedItem"/>
<xs:element ref="setNamedItemNS"/>
<xs:element ref="setAttributeNode"/>
<xs:element ref="setAttributeNodeNS"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INVALID_STATE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="iterateNext"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="SYNTAX_ERR">
<xs:complexType>
<xs:choice/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INVALID_MODIFICATION_ERR">
<xs:complexType>
<xs:choice/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NAMESPACE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="prefix"/>
<xs:element ref="createDocumentType"/>
<xs:element ref="createDocument"/>
<xs:element ref="createElementNS"/>
<xs:element ref="createAttributeNS"/>
<xs:element ref="setAttributeNS"/>
<xs:element ref="createExpression"/>
<xs:element ref="evaluate"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INVALID_ACCESS_ERR">
<xs:complexType>
<xs:choice/>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="VALIDATION_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="validate"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertEventException">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice>
<xs:element ref="UNSPECIFIED_EVENT_TYPE_ERR"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="UNSPECIFIED_EVENT_TYPE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="dispatchEvent"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertASException">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice>
<xs:element ref="DUPLICATE_NAME_ERR"/>
<xs:element ref="TYPE_ERR"/>
<xs:element ref="NO_AS_AVAILABLE"/>
<xs:element ref="WRONG_MIME_TYPE_ERR"/>
<xs:element ref="INVALID_CHARACTER_ERR"/>
<xs:element ref="VALIDATION_ERR"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="DUPLICATE_NAME_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="insertBeforeSubModel"/>
<xs:element ref="appendsubModel"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="TYPE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="insertBeforeSubModel"/>
<xs:element ref="appendsubModel"/>
<xs:element ref="parseASInputSource"/>
<xs:element ref="numberValue"/>
<xs:element ref="stringValue"/>
<xs:element ref="booleanValue"/>
<xs:element ref="singleNodeValue"/>
<xs:element ref="snapshotLength"/>
<xs:element ref="evaluate"/>
<xs:element ref="iterateNext"/>
<xs:element ref="snapshotItem"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="NO_AS_AVAILABLE">
<xs:complexType>
<xs:choice>
<xs:element ref="isNodeValid"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="WRONG_MIME_TYPE_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="parseASInputSource"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="assertXPathException">
<xs:complexType>
<xs:sequence>
<xs:element minOccurs="0" ref="metadata"/>
<xs:choice>
<xs:element ref="INVALID_EXPRESSION_ERR"/>
<xs:element ref="TYPE_ERR"/>
</xs:choice>
</xs:sequence>
<xs:attribute use="required" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:element name="INVALID_EXPRESSION_ERR">
<xs:complexType>
<xs:choice>
<xs:element ref="createExpression"/>
<xs:element ref="evaluate"/>
</xs:choice>
<xs:attribute use="optional" type="xs:ID" name="id"/>
</xs:complexType>
</xs:element>
<xs:group name="assertion">
<xs:choice>
<xs:group ref="framework-assertion"/>
<xs:element ref="assertDOMException"/>
<xs:element ref="assertEventException"/>
<xs:element ref="assertASException"/>
<xs:element ref="assertXPathException"/>
</xs:choice>
</xs:group>
<xs:element name="abstractSchema">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASModel-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASDOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="activeASModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASModel-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="actualEncoding">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="altKey">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ASAttributeDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASNamedObjectMap-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ASContentModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASContentModel-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ASObjectType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="async">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="attrChange">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="attributeDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="attributes">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="attrName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="backgroundColor">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="baseURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="booleanValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="bottomOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="boundASModels">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASObjectList-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="bubbles">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="button">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="byteStream">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = DOMInputSource-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="cancelable">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="characterStream">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = DOMReader-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="childNodes">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="clientX">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="clientY">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="columnNumber">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMLocator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="container">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
<xs:enumeration value="DOMImplementationAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="contentModelDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="contentType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="continuousValidityChecking">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="criteria">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = Match-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ctrlKey">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="currentTarget">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="data">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="dataType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASDataType"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="DataType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASDataType-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASAttributeDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="DataValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASAttributeDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="defaultType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASAttributeDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="definedElementTypes">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="detail">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="UIEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="doctype">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="documentElement">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="documentURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="elementDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="elementType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASDataType-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="embedded">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualFrame"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="encoding">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
<xs:enumeration value="DOMWriter"/>
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="endNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
<xs:enumeration value="DOMBuilderFilter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="endOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="entities">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentType"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="entityDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="entityResolver">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = DOMEntityResolver-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="entityType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASEntityDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="entityValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASEntityDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="enumAttr">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASAttributeDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="error">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ParseErrorEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="errorHandler">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = DOMErrorHandler-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
<xs:enumeration value="DOMBuilder"/>
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="errorNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMLocator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="eventPhase">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="exists">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Item"/>
<xs:enumeration value="VisualFont"/>
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="filter">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = DOMBuilderFilter-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="firstChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="fontHeight">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="fontName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualFont"/>
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="fontScheme">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="foregroundColor">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="formValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualFormField"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="height">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="hint">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="horizontalDPI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="imageURL">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualImage"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="inputSource">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="LSLoadEvent"/>
<xs:enumeration value="LSProgressEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="internalSubset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentType"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="invalidIteratorState">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isLoaded">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualImage"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isPCDataOnly">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isPressed">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualFormButton"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isWhitespaceOnly">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="lastChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="lastEncoding">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="leftOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="length">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeList"/>
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="CharacterData"/>
<xs:enumeration value="ASObjectList"/>
<xs:enumeration value="ASNamedObjectMap"/>
<xs:enumeration value="DOMString"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="lineNumber">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMLocator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="listOperator">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="localName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="location">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMError"/>
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchContaining">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchContainsSelected">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchContainsVisible">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchContent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchFontName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualFont"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchInside">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchNodeR">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchOffsetR">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchPosition">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchRange">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchX">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchXR">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchY">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchYR">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="maxOccurs">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="message">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMError"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="metaKey">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="minOccurs">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="name">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Attr"/>
<xs:enumeration value="DocumentType"/>
<xs:enumeration value="MatchString"/>
<xs:enumeration value="MatchInteger"/>
<xs:enumeration value="MatchBoolean"/>
<xs:enumeration value="MatchContent"/>
<xs:enumeration value="Item"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="NamespaceAware">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="namespaceURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="newDocument">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="LSLoadEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="newLine">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="newValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="nextSibling">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="node">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MatchContent"/>
<xs:enumeration value="MatchSet"/>
<xs:enumeration value="ContentItem"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="nodeName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="nodeType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="nodeValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="notationDecls">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="notations">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentType"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="numberValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="objectName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="offset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMLocator"/>
<xs:enumeration value="MatchContent"/>
<xs:enumeration value="ContentItem"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="order">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ownerASModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ownerDocument">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ownerElement">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Attr"/>
<xs:enumeration value="XPathNamespace"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="ownerElements">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASObjectList-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASAttributeDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parentNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="position">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="LSProgressEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="prefix">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="previousSibling">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="prevValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="publicId">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentType"/>
<xs:enumeration value="ASEntityDecl"/>
<xs:enumeration value="ASNotationDecl"/>
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="relatedException">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMError"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="relatedNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="relatedTarget">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="resultType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="rightOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="schemaType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="screenX">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="screenY">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="selected">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="severity">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMError"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="shiftKey">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="singleNodeValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="snapshotLength">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="specified">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Attr"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="standalone">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="startNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
<xs:enumeration value="DOMBuilderFilter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="startOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="strictErrorChecking">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="strictMixedContent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="stringData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="stringValue">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="subModels">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<!--type = ASObjectList-->
<xs:attribute use="optional" type="variable" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="systemId">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentType"/>
<xs:enumeration value="ASEntityDecl"/>
<xs:enumeration value="ASNotationDecl"/>
<xs:enumeration value="DOMInputSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="tagName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="target">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="textContent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="timeStamp">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="topOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="totalSize">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="LSProgressEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="type">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="uri">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMLocator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="usage">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="value">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Attr"/>
<xs:enumeration value="MatchString"/>
<xs:enumeration value="MatchInteger"/>
<xs:enumeration value="MatchBoolean"/>
<xs:enumeration value="StringItem"/>
<xs:enumeration value="IntegerItem"/>
<xs:enumeration value="BooleanItem"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="version">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="optional" type="variable" name="var"/>
<xs:attribute use="optional" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="verticalDPI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="view">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="UIEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="visible">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="whatToShow">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilderFilter"/>
<xs:enumeration value="DOMWriterFilter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="width">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="abort">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addAS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASModel-->
<xs:attribute use="required" type="variable" name="as"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addASAttributeDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASAttributeDecl-->
<xs:attribute use="required" type="variable" name="attributeDecl"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addASModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASModel-->
<xs:attribute use="required" type="variable" name="abstractSchema"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addEventListener">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<!--type = EventListener-->
<xs:attribute use="required" type="variable" name="listener"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="useCapture"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addGroupedEventListener">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<!--type = EventListener-->
<xs:attribute use="required" type="variable" name="listener"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="useCapture"/>
<!--type = EventGroup-->
<xs:attribute use="required" type="variable" name="evtGroup"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = Item-->
<xs:attribute use="required" type="variable" name="add"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="addMatch">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = Match-->
<xs:attribute use="required" type="variable" name="add"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MatchSet"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="adoptNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="source"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="appendChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="appendData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="appendsubModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="newObject"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canAppendChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canAppendData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canDeleteData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canInsertBefore">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="refChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canInsertData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canRemoveAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrname"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canRemoveAttributeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="attrNode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canRemoveAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrname"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canRemoveChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="oldChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canReplaceChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="oldChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canReplaceData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrname"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrval"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetAttributeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Attr-->
<xs:attribute use="required" type="variable" name="attrNode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrval"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterDataEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="state"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canSetNormalizationFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="state"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="canTrigger">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="cloneASObject">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="deep"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASObject"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="cloneNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="deep"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="compareTreePosition">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="other"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createAS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="NamespaceAware"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="schemaType"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createASAttributeDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createASContentModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="minOccurs"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="maxOccurs"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="operator"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createASElementDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createASEntityDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createASNotationDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="systemId"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="publicId"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="qualifiedName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createBooleanItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createCDATASection">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="data"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createComment">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="data"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createContentItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDocument">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="qualifiedName"/>
<!--type = DocumentType-->
<xs:attribute use="required" type="variable" name="doctype"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementation"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDocumentFragment">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDocumentType">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="qualifiedName"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="publicId"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="systemId"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementation"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDOMBuilder">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variableOrIntLiteral" name="mode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDOMInputSource">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createDOMWriter">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createElement">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="tagName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createElementNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="qualifiedName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createEntityReference">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="eventType"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createEventGroup">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createExpression">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="expression"/>
<!--type = XPathNSResolver-->
<xs:attribute use="required" type="variable" name="resolver"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathEvaluator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createIntegerItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createMatchBoolean">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="test"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createMatchContent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="test"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="node"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createMatchInteger">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="test"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createMatchSet">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="test"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createMatchString">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="test"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createNSResolver">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="nodeResolver"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathEvaluator"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createProcessingInstruction">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="target"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="data"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createSegment">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createStringItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createTextNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="data"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualCharacter">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualCharacterRun">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualFormButton">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualFormField">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualFrame">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="createVisualImage">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="deleteData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="dispatchEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Event-->
<xs:attribute use="required" type="variable" name="evt"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="evaluate">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="expression"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="contextNode"/>
<!--type = XPathNSResolver-->
<xs:attribute use="required" type="variable" name="resolver"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="type"/>
<!--type = XPathResult-->
<xs:attribute use="required" type="variable" name="result"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathEvaluator"/>
<xs:enumeration value="XPathExpression"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getASModels">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getAttributeList">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getAttributeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getAttributeNodeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getBooleanProperty">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getChildElements">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getContentPropertyNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getContentPropertyOffset">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getDOMImplementation">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="features"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementationSource"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getElementById">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="elementId"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getElementDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getElementsByTagName">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="tagname"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getElementsByTagNameNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getIntegerProperty">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getInterface">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="feature"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMImplementation"/>
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getInternalAS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="index"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getMatch">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="index"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MatchSet"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getNamedItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="ASNamedObjectMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getNamedItemNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getNext">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Segment"/>
<xs:enumeration value="VisualFont"/>
<xs:enumeration value="VisualSegment"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getNormalizationFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getParentElements">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getStringProperty">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="getUserData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="key"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="handle">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="operation"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="key"/>
<!--type = DOMObject-->
<xs:attribute use="required" type="variable" name="data"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="src"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="dst"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="UserDataHandler"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="handleEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = Event-->
<xs:attribute use="required" type="variable" name="evt"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventListener"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="hasAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="hasAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="hasAttributes">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="hasChildNodes">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="importASObject">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="asobject"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="importNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="importedNode"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="deep"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="initEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="eventTypeArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="canBubbleArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="cancelableArg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="initMouseEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="typeArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="canBubbleArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="cancelableArg"/>
<!--type = views::AbstractView-->
<xs:attribute use="required" type="variable" name="viewArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="detailArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="screenXArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="screenYArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="clientXArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="clientYArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="ctrlKeyArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="altKeyArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="shiftKeyArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="metaKeyArg"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="buttonArg"/>
<!--type = EventTarget-->
<xs:attribute use="required" type="variable" name="relatedTargetArg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MouseEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="initMutationEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="typeArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="canBubbleArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="cancelableArg"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="relatedNodeArg"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="prevValueArg"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="newValueArg"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="attrNameArg"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="attrChangeArg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="MutationEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="initUIEvent">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="typeArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="canBubbleArg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="cancelableArg"/>
<!--type = views::AbstractView-->
<xs:attribute use="required" type="variable" name="viewArg"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="detailArg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="UIEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="insertASObject">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="asobject"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="insertBefore">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="refChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="insertBeforeSubModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="newObject"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="refObject"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="insertData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isElementDefined">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="elemTypeName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isElementDefinedNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="elemTypeName"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ElementEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isEqualNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="arg"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="deep"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isNodeValid">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="deep"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="wFValidityCheckLevel"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeEditAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isRegisteredHere">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isSameEventGroup">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = EventGroup-->
<xs:attribute use="required" type="variable" name="other"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventGroup"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isSameNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="other"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="isSupported">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="feature"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="version"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="item">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="index"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NodeList"/>
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="ASObjectList"/>
<xs:enumeration value="ASNamedObjectMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="iterateNext">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="loadXML">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="source"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="lookupNamespacePrefix">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="lookupNamespaceURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="prefix"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
<xs:enumeration value="XPathNSResolver"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchFirstSegment">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Segment-->
<xs:attribute use="required" type="variable" name="todo"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="matchSegment">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = VisualResource-->
<xs:attribute use="required" type="variable" name="segment"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="normalize">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="normalizeDocument">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parse">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = DOMInputSource-->
<xs:attribute use="required" type="variable" name="is"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parseASInputSource">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = ls::DOMInputSource-->
<xs:attribute use="required" type="variable" name="is"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASDOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parseASURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="uri"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="schemaType"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASDOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parseURI">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="uri"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="parseWithContext">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = DOMInputSource-->
<xs:attribute use="required" type="variable" name="is"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="cnode"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="action"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="preventDefault">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeAS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASModel-->
<xs:attribute use="required" type="variable" name="as"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeASAttributeDecl">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = ASAttributeDecl-->
<xs:attribute use="required" type="variable" name="attributeDecl"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASElementDecl"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeAttributeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Attr-->
<xs:attribute use="required" type="variable" name="oldAttr"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="oldChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeEventListener">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<!--type = EventListener-->
<xs:attribute use="required" type="variable" name="listener"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="useCapture"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeGroupedEventListener">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="type"/>
<!--type = EventListener-->
<xs:attribute use="required" type="variable" name="listener"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="useCapture"/>
<!--type = EventGroup-->
<xs:attribute use="required" type="variable" name="evtGroup"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="EventTarget"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeNamedItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="ASNamedObjectMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removeNamedItemNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="localName"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="removesubModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASObject-->
<xs:attribute use="required" type="variable" name="oldObject"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASContentModel"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="renameNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="n"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="replaceChild">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="newChild"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="oldChild"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="replaceData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="resolveEntity">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="publicId"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="systemId"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="baseURI"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMEntityResolver"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="saveXML">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="snode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentLS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="select">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="boundary"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="extend"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="add"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="View"/>
<xs:enumeration value="VisualView"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setAttribute">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setAttributeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Attr-->
<xs:attribute use="required" type="variable" name="newAttr"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setAttributeNodeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Attr-->
<xs:attribute use="required" type="variable" name="newAttr"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setAttributeNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="namespaceURI"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="qualifiedName"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="value"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Element"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setCurrentTarget">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="target"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CustomEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setEventPhase">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = unsigned short-->
<xs:attribute use="required" type="variable" name="phase"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CustomEvent"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="state"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMBuilder"/>
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setInternalAS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = ASModel-->
<xs:attribute use="required" type="variable" name="as"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setNamedItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="arg"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
<xs:enumeration value="ASNamedObjectMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setNamedItemNS">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="arg"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="NamedNodeMap"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setNormalizationFeature">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="name"/>
<xs:attribute use="required" type="variableOrBoolLiteral" name="state"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Document"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="setUserData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrStringLiteral" name="key"/>
<!--type = DOMKeyObject-->
<xs:attribute use="required" type="variable" name="data"/>
<!--type = UserDataHandler-->
<xs:attribute use="required" type="variable" name="handler"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Node"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="snapshotItem">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="index"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="XPathResult"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="splitText">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Text"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="stopPropagation">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="Event"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="substringData">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="offset"/>
<xs:attribute use="required" type="variableOrIntLiteral" name="count"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="CharacterData"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="validate">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<xs:attribute name="interface" use="required">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="ASModel"/>
<xs:enumeration value="DocumentAS"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="writeASModel">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<!--type = DOMOutputStream-->
<xs:attribute use="required" type="variable" name="destination"/>
<!--type = ASModel-->
<xs:attribute use="required" type="variable" name="model"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMASWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="writeNode">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = DOMOutputStream-->
<xs:attribute use="required" type="variable" name="destination"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="wnode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="writeToString">
<xs:complexType>
<xs:attribute use="optional" type="xs:ID" name="id"/>
<xs:attribute use="required" type="variable" name="obj"/>
<xs:attribute use="required" type="variable" name="var"/>
<!--type = Node-->
<xs:attribute use="required" type="variable" name="wnode"/>
<xs:attribute name="interface" use="optional">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="DOMWriter"/>
</xs:restriction>
</xs:simpleType>
</xs:attribute>
</xs:complexType>
</xs:element>
</xs:schema>
