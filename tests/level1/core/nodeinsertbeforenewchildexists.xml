<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test SYSTEM "dom1.dtd">
<test xmlns="http://www.w3.org/2001/DOM-Test-Suite/Level-1" name="nodeinsertbeforenewchildexists">
	<metadata>
		<title>nodeInsertBeforeNewChildExists</title>
		<creator>NIST</creator>
		<description>
    If the "newChild" is already in the tree, the
    "insertBefore(newChild,refChild)" method must first
    remove it before the insertion takes place.
    
    Insert a node Element ("employeeId") that is already
    present in the tree.   The existing node should be 
    removed first and the new one inserted.   The node is
    inserted at a different position in the tree to assure
    that it was indeed inserted.
</description>
		<contributor>Mary Brady</contributor>
		<date qualifier="created">2001-08-17</date>
		<subject resource="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#"/>
	</metadata>
	<var name="doc" type="Document"/>
	<var name="elementList" type="NodeList"/>
	<var name="employeeNode" type="Node"/>
	<var name="childList" type="NodeList"/>
	<var name="refChild" type="Node"/>
	<var name="newChild" type="Node"/>
	<var name="child" type="Node"/>
	<var name="childName" type="DOMString"/>
	<var name="insertedNode" type="Node"/>
	<load var="doc" href="staff.xml" willBeModified="true"/>
	<getElementsByTagName interface="Document" obj="doc" tagname="&quot;employee&quot;" var="elementList"/>
	<item interface="NodeList" obj="elementList" index="1" var="employeeNode"/>
	<childNodes obj="employeeNode" var="childList"/>
	<item interface="NodeList" obj="childList" index="11" var="refChild"/>
	<item interface="NodeList" obj="childList" index="1" var="newChild"/>
	<insertBefore var="insertedNode" obj="employeeNode" newChild="newChild" refChild="refChild"/>
	<item interface="NodeList" obj="childList" index="2" var="child"/>
	<nodeName obj="child" var="childName"/>
    <assertEquals id="childName1" actual="childName" expected='"name"' ignoreCase="false"/>
	<item interface="NodeList" obj="childList" index="10" var="child"/>
	<nodeName obj="child" var="childName"/>
    <assertEquals id="childName2" actual="childName" expected='"employeeId&gt;"' ignoreCase="false"/>
</test>
