<?xml version="1.0"?>
<!--
Copyright (c) 2001 World Wide Web Consortium,
(Massachusetts Institute of Technology, Institut National de
Recherche en Informatique et en Automatique, Keio University). All
Rights Reserved. This program is distributed under the W3C's Software
Intellectual Property License. This program is distributed in the
hope that it will be useful, but WITHOUT ANY WARRANTY; without even
the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.
See W3C License http://www.w3.org/Consortium/Legal/ for more details.
-->

<!--
$Log: build.xml,v $
Revision 1.64  2002-06-29 18:40:01  dom-ts-4
Added dom1-[core|html]-validate-files and DOMTSApplet

Revision 1.63  2002/06/25 06:59:26  dom-ts-4
Added dom1-html-gen-jsunit, other cleanup

Revision 1.62  2002/06/10 04:24:01  dom-ts-4
Added XHTML DTD to dom1-core.jar

Revision 1.61  2002/06/06 05:04:11  dom-ts-4
Update for DOM Level 2 HTML CR
Added dom2-html-jar target

Revision 1.60  2002/06/03 23:56:13  dom-ts-4
Added dom2-events-jar and related tasks

Revision 1.59  2002/05/23 13:35:35  dom-ts-4
Changed depenencies for -validate-tests tasks

Revision 1.58  2002/04/21 23:13:30  dom-ts-4
Update for April 2002 L3 public working drafts

Revision 1.57  2002/04/19 05:17:42  dom-ts-4
Updated for 04/09 DOM 3 working drafts

Revision 1.56  2002/04/09 01:30:38  dom-ts-4
dom1-core-metadata didn't declare dependence on dom1-dtd
updated URL for new XPath WD

Revision 1.55  2002/03/27 07:40:15  dom-ts-4
dom3-schema builds "almost" final schema

Revision 1.54  2002/03/04 14:17:13  dom-ts-4
Added dom1-core-gen-browser that builds (currently non-functional)
HTML test runner

Revision 1.53  2002/03/02 22:55:09  dom-ts-4
Added dom1-html-matrix

Revision 1.52  2002/03/02 08:27:27  dom-ts-4
Added dom1-html-jar to build DOM1 HTML jar, more DOM L1 HTML to come

Revision 1.51  2002/03/01 08:12:34  dom-ts-4
Added dom2-core-matrix back into dom2-core-dist

Revision 1.50  2002/03/01 07:29:42  dom-ts-4
DOM L2 Distribution runnable (at least with SAXON)

Revision 1.49  2002/02/28 06:52:48  dom-ts-4
Added dom2-core-dist

Revision 1.48  2002/02/26 07:18:21  dom-ts-4
Copy test-to-html.xsl to distribution tests directory

Revision 1.47  2002/02/22 10:15:55  dom-ts-4
Changed build directory for DOM L2 Core and HTML JSUnit tests to match DOM L1 Core

Revision 1.46  2002/02/13 16:26:16  dom-ts-4
Updated for move of doxygen config files to doxygen, svgfix.sed to patches

Revision 1.45  2002/02/13 08:32:31  dom-ts-4
Copied jsunit/images and jsunit/tests to distribution

Revision 1.44  2002/02/13 08:01:15  dom-ts-4
Added dom1-core-dist target
Relocated .jar files from dist/ to build/
Patches JSUnit 1.2.6

Revision 1.43  2002/01/29 06:27:11  dom-ts-4
Changed tr/2001 to tr/2002 for new working drafts

Revision 1.42  2002/01/29 06:21:44  dom-ts-4
Moved patch files

Revision 1.41  2002/01/04 07:59:14  dom-ts-4
Added dom2-html-gen-java, dom2-html-javac targets

Revision 1.40  2001/12/10 17:15:20  dom-ts-4
URL for DOM Level 2 HTML updated

Revision 1.39  2001/12/10 05:37:20  dom-ts-4
Added xml_alltests, svg_alltests, and html_alltests suites to run all tests
using a particular content type.

Revision 1.38  2001/11/28 15:26:53  dom-ts-4
Copied dom2.dtd to tests/level2/html directory

Revision 1.37  2001/11/27 19:42:27  dom-ts-2
Added targets for dom2-html.


Revision 1.36  2001/11/17 04:28:15  dom-ts-4
Added dom2-core-gen-jsunit target

Revision 1.35  2001/11/16 05:46:09  dom-ts-4
Set debug="on" for java compilation.  Puts line numbers in tracebacks

Revision 1.34  2001/11/14 08:47:46  dom-ts-4
Added pre-generated documentcreatecdatasection.js and .html to
avoid Xalan-J lock ups with some versions

Revision 1.33  2001/11/14 02:08:36  dom-ts-4
Added pre-generated copy of documentcreatecdatasection.java
to avoid lockups with some versions of Xalan-J

Revision 1.32  2001/11/07 06:25:28  dom-ts-4
DOM Level 3 DTD and Schema building

Revision 1.31  2001/11/01 16:41:05  dom-ts-4
Added dom2-core-doxygen, updated usage

Revision 1.30  2001/11/01 15:02:50  dom-ts-4
Doxygen and Avalon support

Revision 1.29  2001/10/30 06:03:39  dom-ts-4
Updated build.xml to use 26 Oct 2001 DOM Level 2 HTML Working Draft

Revision 1.28  2001/10/25 09:29:27  dom-ts-4
test-to-java updates for DOM L2

Revision 1.27  2001/10/18 14:21:59  dom-ts-4
Fixed regexp pattern for stringLiteral
Explicitly specified UTF-8 encoding for test-to-java.xsl, etc
Specified UTF8 encoding for javac

Revision 1.26  2001/10/18 07:58:17  dom-ts-4
assertURIEquals added
Can now run from dom1-core.jar

Revision 1.25  2001/09/14 06:55:35  dom-ts-4
Support for Adobe SVG Viewer (must uncomment code in DOMTestCase.js)

Revision 1.24  2001/09/06 02:35:19  dom-ts-4
Now supporting Mozilla 0.9.3

Revision 1.23  2001/09/06 02:00:04  dom-ts-4
Now supporting Mozilla 0.9.3

Revision 1.22  2001/09/05 17:33:42  dom-ts-4
IE5 support.

Revision 1.21  2001/09/05 16:41:04  dom-ts-4
Support for JsUnit and IE5.

Revision 1.20  2001/09/05 16:39:55  dom-ts-4
Support for JsUnit and IE5.

Revision 1.19  2001/08/30 08:30:17  dom-ts-4
Added metadata and Software licence (dropped in earlier processing) to test
Enhanced test-matrix.xsl

Revision 1.18  2001/08/24 08:28:00  dom-ts-4
Test matrix generation.  Some Node.setValue() tests

Revision 1.17  2001/08/23 08:01:49  dom-ts-4
Test fixups for ignoring whitespace, et al

Revision 1.16  2001/08/22 22:12:46  dom-ts-4
Now passing all tests with default settings

Revision 1.15  2001/08/22 01:46:10  dom-ts-4
Updated subjects based on filename analysis

Revision 1.14  2001/08/21 06:06:12  dom-ts-4
DOM 1 SE targets
Fixed cases that locked Xalan
org.w3c.domts.level1.core.alltests
DOM2 DTD/Schema

Revision 1.13  2001/08/20 06:56:35  dom-ts-4
Full compile (-2 files that lock up Xalan 2.1)

Revision 1.12  2001/08/19 20:51:19  dom-ts-4
Successful DTD validation

Revision 1.11  2001/08/15 04:44:03  dom-ts-4
Added dom1-gen-ecmascript target to build.xml
Minor fixes to test-to-java.xsl and test-to-ecmascript.xsl

Revision 1.10  2001/08/14 18:49:35  dom-ts-4
Changed location of resource files
Remove spurious required ID's from DTD
Added xmlns:xsi and xsi:schema location to DTD
Removed package and targetURI attributes from Schema/DTD

Revision 1.9  2001/08/10 18:53:25  dom-ts-3

Attempt to make indentation more consistent, and limit line length to about
80 characters, for those of us who still need to live in an 80-column world
(if only due to geek social convention).

This only changes whitespace, not content or structure.

Revision 1.8  2001/08/02 04:44:15  dom-ts-4
Adapter for Avalon test framework.

Revision 1.7  2001/07/23 04:52:20  dom-ts-4
Initial test running using JUnit.

Revision 1.6  2001/07/20 05:44:32  dom-ts-4
Initial SVG support.  multiply renamed mult,
All implementation conditions combined into implementationAttribute element

-->
<project default="usage" basedir=".">

<target name="usage">
	<echo message="common targets:"/>
    <echo message="usage                displays this message"/>
    <echo message="clean                deletes all generated files"/>
    <echo message="junit-run            builds JUnit adapter for DOM Tests for Java"/>
    <echo message="avalon-run           builds Avalon Testlet adapter for DOM tests"/>
    <echo message="dom1-core-jar        builds DOM Level 1 Core tests for Java"/>
    <echo message="dom1-schema          builds W3C XML Schema for DOM 1 tests"/>
    <echo message="dom1-core-matrix     builds test matrix for DOM Level 1 Core"/>
    <echo message="dom1-core-validate-tests"/>
    <echo message="                     validates DOM Level 1 Core tests against DTD"/>
    <echo message="dom1-core-gen-ecmascript"/>
    <echo message="                     builds DOM Level 1 Core tests for ECMAScript"/>
    <echo message="dom1-core-gen-jsunit"/>
    <echo message="                     builds JSUnit adapters for DOM Level 1 Core"/>
    <echo message="dom1-core-doxygen    builds documentation for DOM Level 1 Core"/>
    <echo message="dom1-core-dist       builds distribution for DOM Level 1 Core"/>
    <echo message="dom2-core-*          Same as above but for DOM Level 2 Core"/>
	<echo message=""/>
</target>

<target name="init">
	<property name="specs.dir" value="./lib/specs"/>
	<property name="transforms.dir" value="./transforms"/>
	<property name="build.dir" value="./build"/>
	<property name="java.build.dir" value="./build/java"/>
	<property name="tests.dir" value="./tests"/>
	<property name="metadata.dir" value="./build/metadata"/>
	<property name="dist.dir" value="./dist"/>
	<property name="lib.dir" value="./lib"/>
	<!--  any jar that contains org.w3c.dom and javax.xml.parsers classes  -->
	<property name="jaxp.jar" value="d:/ant1.4/lib/xerces.jar"/>
	<mkdir dir="${build.dir}"/>
	<mkdir dir="${lib.dir}"/>
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${dist.dir}"/>
    <available property="junit-available" file="${lib.dir}/junit.zip"/>
    <available property="junit-license-available" file="${lib.dir}/junit-license.html"/>
    <available property="jsunit-available" file="${lib.dir}/jsunit.zip"/>
    <available property="avalon-available" file="${lib.dir}/avalon.zip"/>
    <available property="xhtml1-dtd-available" file="${lib.dir}/xhtml1-dtd/xhtml1-frameset.dtd"/>
</target>


<target name="get-xhtml1-dtd" depends="init" unless="xhtml1-dtd-available">
    <mkdir dir="${lib.dir}/xhtml1-dtd"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"
        dest="${lib.dir}/xhtml1-dtd/xhtml1-frameset.dtd"
        usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
        dest="${lib.dir}/xhtml1-dtd/xhtml1-transitional.dtd"
        usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
        dest="${lib.dir}/xhtml1-dtd/xhtml1-strict.dtd"
        usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml-lat1.ent"
        dest="${lib.dir}/xhtml1-dtd/xhtml-lat1.ent"
        usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml-symbol.ent"
        dest="${lib.dir}/xhtml1-dtd/xhtml-symbol.ent"
        usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/xhtml1/DTD/xhtml-special.ent"
        dest="${lib.dir}/xhtml1-dtd/xhtml-special.ent"
        usetimestamp="yes"/>
</target>

<!--  determines if DOM 1 spec files are already available locally  -->
<target name="dom1-check-spec" depends="init">
    <available property="dom1-available" file="${specs.dir}/DOM.zip"/>
</target>

<!--  gets DOM 1 specs unless they are available locally   -->
<target name="get-dom1" depends="dom1-check-spec" unless="dom1-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-1"/>
	<!--   download DOM 1 spec to specs directory   -->
	<get src="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/DOM.zip"
	     dest="${specs.dir}/DOM.zip"
	     usetimestamp="yes"/>
</target>

<target name="dom1-init" depends="get-dom1">

	<unzip src="${specs.dir}/DOM.zip" dest="${specs.dir}/Level-1"/>
	<unzip src="${specs.dir}/Level-1/xml-source.zip" dest="${specs.dir}/Level-1"/>

	<!--  patch wd-dom file to add missing xmlns:xlink attribute  -->
	<patch patchfile="./patches/wd-dom.patch"
	       originalfile="${specs.dir}/Level-1/xml/wd-dom.xml"/>
	<patch patchfile="./patches/level-1-element.patch"
	       originalfile="${specs.dir}/Level-1/xml/definitions/level-one-core/element.xml"/>
</target>

<target name="dom1-schema" depends="dom1-init">
	<style basedir="${specs.dir}/Level-1/xml"
	       in="${specs.dir}/Level-1/xml/wd-dom.xml"
	       out="${build.dir}/_dom1.xsd"
	       style="${transforms.dir}/dom-to-xsd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-1"/>
	</style>

	<!--  remove leading underscore from _xmlns attribute    -->
	<exec executable="sed" output="${build.dir}/dom1.xsd">
		<arg line="-e 's/_xmlns/xmlns/g' -e 's/xmlns_test/xmlns:test/g' ${build.dir}/_dom1.xsd"/>
	</exec>
	<delete file="${build.dir}/_dom1.xsd"/>
	<copy file="${build.dir}/dom1.xsd" todir="${tests.dir}/level1/core"/>

	<!-- xmlvalidate file="${build.dir}/dom1.xsd" lenient="no"
	     failonerror="yes"
	     classname="org.apache.xerces.parsers.SAXParser"/ -->
</target>

<target name="dom1-dtd" depends="dom1-init">
	<style basedir="${specs.dir}/Level-1/xml"
	       in="${specs.dir}/Level-1/xml/wd-dom.xml"
	       out="${build.dir}/dom1.dtd"
	       style="${transforms.dir}/dom-to-dtd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-1"/>
	</style>
	<copy file="${build.dir}/dom1.dtd" todir="${tests.dir}/level1/core"/>
	<copy file="${build.dir}/dom1.dtd" todir="${tests.dir}/level1/html"/>
    <copy file="${build.dir}/dom1.dtd" todir="${tests.dir}/submittedtests/netscapeHTML"/>
</target>

<target name="dom1-subjects" depends="dom1-init">
	<style basedir="${specs.dir}/Level-1/xml"
	       in="${specs.dir}/Level-1/xml/wd-dom.xml"
	       out="${build.dir}/dom1-subjects.xml"
	       style="${transforms.dir}/subjects.xsl"/>
</target>

<target name="dom1-core-metadata" depends="dom1-dtd">
    <mkdir dir="${build.dir}"/>
	<style in="${tests.dir}/level1/core/alltests.xml" 
		   out="${build.dir}/dom1-core-metadata.rdf" 
	       style="${transforms.dir}/combine-metadata.xsl">
		<param name="baseURI"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
        <param name="externalMetadata" expression="metadata.xml"/>
	</style>
</target>


<target name="dom1-core-matrix" depends="dom1-core-metadata,dom1-subjects,dom1-interfaces">
    <mkdir dir="${build.dir}"/>
	<style in="${build.dir}/dom1-core-metadata.rdf" 
		   out="${build.dir}/dom1-core-matrix.html" 
	       style="${transforms.dir}/test-matrix.xsl">
		<param name="specURI"
		       expression="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core#"/>
        <param name="interfacesURL" expression="dom1-interfaces.xml"/>
        <param name="specMetadataURL" expression="dom1-subjects.xml"/>
	</style>
</target>

<target name="dom1-html-metadata" depends="dom1-dtd">
    <mkdir dir="${build.dir}"/>
	<style in="${tests.dir}/level1/html/alltests.xml" 
		   out="${build.dir}/dom1-html-metadata.rdf" 
	       style="${transforms.dir}/combine-metadata.xsl">
		<param name="baseURI"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/html/"/>
        <param name="externalMetadata" expression="metadata.xml"/>
	</style>
</target>


<target name="dom1-html-matrix" depends="dom1-html-metadata,dom1-subjects,dom1-interfaces">
    <mkdir dir="${build.dir}"/>
	<style in="${build.dir}/dom1-html-metadata.rdf" 
		   out="${build.dir}/dom1-html-matrix.html" 
	       style="${transforms.dir}/test-matrix.xsl">
		<param name="specURI"
		       expression="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-html#"/>
        <param name="interfacesURL" expression="dom1-interfaces.xml"/>
        <param name="specMetadataURL" expression="dom1-subjects.xml"/>
        <param name="title" expression="DOM Level 1 HTML Test Suite Matrix"/>
	</style>
</target>

<target name="analyze-names" depends="dom1-interfaces">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level1/core"/>
	<style basedir="${tests.dir}/level1/core" 
		   destdir="${java.build.dir}/org/w3c/domts/level1/core" 
		   includes="*.xml" 
	       style="${transforms.dir}/check-subjects.xsl" 
	       extension=".xml">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level1.core"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
	</style>
</target>


<target name="dom1-interfaces" depends="dom1-init">
	<style basedir="${specs.dir}/Level-1/xml"
	       in="${specs.dir}/Level-1/xml/wd-dom.xml"
	       out="${build.dir}/dom1-interfaces.xml"
	       style="${transforms.dir}/extract.xsl"
	       processor="trax"/>
</target>

<target name="dom1-core-dist" depends="dom1-core-jar,dom1-core-gen-jsunit,dom1-core-matrix,dom1-core-doxygen,junit-run,get-junit-license,dom1-schema">
    <mkdir dir="${build.dir}/level1/core/resources"/>
    <mkdir dir="${build.dir}/level1/core/java"/>
    <copy file="docs/level1/core/index.htm" todir="${build.dir}/level1/core"/>
    <copy todir="${build.dir}/level1/core/resources">
        <fileset dir="docs/level1/core/resources" excludes="*.bak"/>
    </copy>
    <copy file="${build.dir}/dom1-core.jar" todir="${build.dir}/level1/core/java"/>
    <copy file="${build.dir}/junit-run.jar" todir="${build.dir}/level1/core/java"/>
    <copy file="${lib.dir}/junit3.7/junit.jar" todir="${build.dir}/level1/core/java"/>
    <copy file="${lib.dir}/junit-license.html" todir="${build.dir}/level1/core/java"/>
    <copy file="${lib.dir}/jsunit/testRunner.html" todir="${build.dir}/level1/core/ecmascript"/>
    <mkdir dir="${build.dir}/level1/core/ecmascript/app"/>
    <copy todir="${build.dir}/level1/core/ecmascript/app">
        <fileset dir="${lib.dir}/jsunit/app" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level1/core/ecmascript/images"/>
    <copy todir="${build.dir}/level1/core/ecmascript/images">
        <fileset dir="${lib.dir}/jsunit/images" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level1/core/ecmascript/docs"/>
    <copy todir="${build.dir}/level1/core/ecmascript/docs">
        <fileset dir="${lib.dir}/jsunit/docs" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level1/core/ecmascript/jsunit-self-tests"/>
    <copy todir="${build.dir}/level1/core/ecmascript/jsunit-self-tests">
        <fileset dir="${lib.dir}/jsunit/tests" excludes="*.bak"/>
    </copy>
    <copy file="${build.dir}/dom1-core-matrix.html" todir="${build.dir}/level1/core"/>


    <mkdir dir="${build.dir}/level1/core/tests/files"/>
    <copy todir="${build.dir}/level1/core/tests">
        <fileset dir="${tests.dir}/level1/core" includes="*.xml"/>
        <fileset dir="${build.dir}" includes="dom1.dtd"/>
        <fileset dir="${build.dir}" includes="dom1.xsd"/>
        <fileset dir="${transforms.dir}" includes="test-to-html.xsl"/>
    </copy>
    <copy todir="${build.dir}/level1/core/tests/files">
        <fileset dir="${tests.dir}/level1/core/files" excludes="*.bak"/>
    </copy>

    <mkdir dir="${dist.dir}"/>
    <zip  zipfile="${dist.dir}/dom1-core.zip" basedir="${build.dir}/level1/core"/>
    <tar tarfile="${dist.dir}/dom1-core.tar" basedir="${build.dir}/level1/core"/>
    <gzip src="${dist.dir}/dom1-core.tar" zipfile="${dist.dir}/dom1-core.tar.gz"/>
        
        
</target>

<!--  determines if DOM 1 spec files are already available locally  -->
<target name="dom1SE-check-spec" depends="init">
    <available property="dom1SE-available" file="${specs.dir}/DOM1SE.zip"/>
</target>

<!--  gets DOM 1 specs unless they are available locally   -->
<target name="get-dom1SE" depends="dom1SE-check-spec" unless="dom1SE-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-1SE"/>
	<!--   download DOM 1 SE spec to specs directory   -->
	<get src="http://www.w3.org/TR/2000/WD-DOM-Level-1-20000929/DOM.zip"
	     dest="${specs.dir}/DOM1SE.zip"
	     usetimestamp="yes"/>
</target>

<!--  this target downloads the DOM Level 1 Second Edition Working Draft  -->
<target name="dom1SE-init" depends="get-dom1SE">

	<unzip src="${specs.dir}/DOM1SE.zip" dest="${specs.dir}/Level-1SE"/>
	<unzip src="${specs.dir}/Level-1SE/xml-source.zip" dest="${specs.dir}/Level-1SE"/>

</target>


<target name="dom1SE-schema" depends="dom1SE-init">
	<style basedir="${specs.dir}/Level-1SE"
	       in="${specs.dir}/Level-1SE/wd-dom.xml"
	       out="${build.dir}/_dom1SE.xsd"
	       style="${transforms.dir}/dom-to-xsd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-1"/>
	</style>

	<!--  remove leading underscore from _xmlns attribute    -->
	<exec executable="sed" output="${build.dir}/dom1SE.xsd">
		<arg line="-e 's/_xmlns/xmlns/g' -e 's/xmlns_test/xmlns:test/g' ${build.dir}/_dom1SE.xsd"/>
	</exec>
	<delete file="${build.dir}/_dom1SE.xsd"/>
	<copy file="${build.dir}/dom1SE.xsd" todir="${tests.dir}/level1/core"/>

</target>


<target name="dom1SE-dtd" depends="dom1SE-init">
	<style basedir="${specs.dir}/Level-1SE"
	       in="${specs.dir}/Level-1SE/wd-dom.xml"
	       out="${build.dir}/dom1SE.dtd"
	       style="${transforms.dir}/dom-to-dtd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-1"/>
	</style>
	<copy file="${build.dir}/dom1SE.dtd" todir="${tests.dir}/level1/core"/>
</target>

<target name="dom1SE-subjects" depends="dom1SE-init">
	<style basedir="${specs.dir}/Level-1SE"
	       in="${specs.dir}/Level-1SE/wd-dom.xml"
	       out="${build.dir}/dom1SE-subjects.xml"
	       style="${transforms.dir}/subjects.xsl"/>
</target>

<target name="dom1SE-interfaces" depends="dom1SE-init">
	<style basedir="${specs.dir}/Level-1SE"
	       in="${specs.dir}/Level-1SE/wd-dom.xml"
	       out="${build.dir}/dom1SE-interfaces.xml"
	       style="${transforms.dir}/extract.xsl"/>
</target>



<target name="dom2-check-spec" depends="init">
    <available property="dom2-core-available" file="${specs.dir}/DOM2-Core.zip"/>
    <available property="dom2-views-available" file="${specs.dir}/DOM2-Views-Java-Binding.zip"/>
    <available property="dom2-events-available" file="${specs.dir}/DOM2-Events-Java-Binding.zip"/>
    <available property="dom2-style-available" file="${specs.dir}/DOM2-Style.zip"/>
    <available property="dom2-traversal-available" file="${specs.dir}/DOM2-Traversal-Range.zip"/>
    <available property="dom2-html-available" file="${specs.dir}/DOM2-HTML-Java-Binding.zip"/>
</target>

<!--  gets DOM 2 Core spec unless it is available locally   -->
<target name="get-dom2-core" depends="dom2-check-spec" unless="dom2-core-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/DOM2-Core.zip"
		dest="${specs.dir}/DOM2-Core.zip"
		usetimestamp="yes"/>
</target>

<target name="get-dom2-views" depends="dom2-check-spec" unless="dom2-views-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Views-20001113/DOM2-Views.zip"
		dest="${specs.dir}/DOM2-Views.zip"
		usetimestamp="yes"/>

    <get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Views-20001113/java-binding.zip"
        dest="${specs.dir}/DOM2-Views-Java-Binding.zip"
        usetimestamp="yes"/>

</target>

<target name="get-dom2-events" depends="dom2-check-spec" unless="dom2-events-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/DOM2-Events.zip"
		dest="${specs.dir}/DOM2-Events.zip"
		usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/java-binding.zip"
        dest="${specs.dir}/DOM2-Events-Java-Binding.zip"
        usetimestamp="yes"/>
</target>

<target name="get-dom2-style" depends="dom2-check-spec" unless="dom2-style-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/DOM2-Style.zip"
		dest="${specs.dir}/DOM2-Style.zip"
		usetimestamp="yes"/>
</target>


<target name="get-dom2-traversal" depends="dom2-check-spec" unless="dom2-traversal-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/DOM2-Traversal-Range.zip"
		dest="${specs.dir}/DOM2-Traversal-Range.zip"
		usetimestamp="yes"/>
</target>

<target name="get-dom2-html" depends="dom2-check-spec" unless="dom2-html-available">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-2"/>
	<get src="http://www.w3.org/TR/2002/CR-DOM-Level-2-HTML-20020605/DOM2-HTML.zip"
		dest="${specs.dir}/DOM2-HTML.zip"
		usetimestamp="yes"/>
    <get src="http://www.w3.org/TR/2002/CR-DOM-Level-2-HTML-20020605/java-binding.zip"
        dest="${specs.dir}/DOM2-HTML-Java-Binding.zip"
        usetimestamp="yes"/>
</target>

<target name="get-dom2" depends="get-dom2-core,get-dom2-events,get-dom2-html,get-dom2-views,get-dom2-traversal,get-dom2-style">
</target>

<target name="dom2-init" depends="get-dom2">

	<unzip src="${specs.dir}/DOM2-Core.zip"
	       dest="${specs.dir}/Level-2/Core"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/Core/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/core"/>


	<unzip src="${specs.dir}/DOM2-Views.zip"
	       dest="${specs.dir}/Level-2/Views"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/Views/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/views"/>



	<unzip src="${specs.dir}/DOM2-Events.zip"
	       dest="${specs.dir}/Level-2/Events"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/Events/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/events"/>


	<unzip src="${specs.dir}/DOM2-Style.zip"
	       dest="${specs.dir}/Level-2/Style"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/Style/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/style"/>


	<unzip src="${specs.dir}/DOM2-Traversal-Range.zip"
	       dest="${specs.dir}/Level-2/Traversal-Range"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/Traversal-Range/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/traversal-range"/>



	<unzip src="${specs.dir}/DOM2-HTML.zip"
	       dest="${specs.dir}/Level-2/HTML"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-2/HTML/xml-source.zip"
	       dest="${specs.dir}/Level-2/xml/html"/>

	<!--  zip file is missing two support files   -->
	<echo file="${specs.dir}/Level-2/xml/options.xml"
	      message="&lt;?xml version='1.0' encoding='UTF-8'?&gt;"/>
	<echo file="${specs.dir}/Level-2/xml/status.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

    <!--  change name parameter of Element.getElementsByTagName to tagname   -->
	<patch patchfile="./patches/level-2-element.patch"
	       originalfile="${specs.dir}/Level-2/xml/core/definitions/element.xml"/>


	<unzip src="${specs.dir}/DOM2-HTML-Java-Binding.zip"
	       dest="${specs.dir}/Level-2/HTML/java"/>
	<unzip src="${specs.dir}/DOM2-Events-Java-Binding.zip"
	       dest="${specs.dir}/Level-2/Events"/>
	<unzip src="${specs.dir}/DOM2-Views-Java-Binding.zip"
	       dest="${specs.dir}/Level-2/Views"/>

</target>

<target name="dom2-schema" depends="dom2-interfaces">
	<style in="${build.dir}/dom2-interfaces.xml"
	       out="${build.dir}/_dom2.xsd"
	       style="${transforms.dir}/dom-to-xsd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-2"/>
	</style>

	<!--  remove leading underscore from _xmlns attribute    -->
	<exec executable="sed" output="${build.dir}/dom2.xsd">
		<arg line="-e 's/_xmlns/xmlns/g' -e 's/xmlns_test/xmlns:test/g'  ${build.dir}/_dom2.xsd"/>
	</exec>
	<delete file="${build.dir}/_dom2.xsd"/>
</target>

<target name="dom2-dtd" depends="dom2-interfaces">
	<style in="${build.dir}/dom2-interfaces.xml"
	       out="${build.dir}/dom2.dtd"
	       style="${transforms.dir}/dom-to-dtd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-2"/>
	</style>
	<copy file="${build.dir}/dom2.dtd" todir="${tests.dir}/level2/core"/>
	<copy file="${build.dir}/dom2.dtd" todir="${tests.dir}/level2/html"/>
	<copy file="${build.dir}/dom2.dtd" todir="${tests.dir}/level2/events"/>
</target>

<target name="dom2-subjects" depends="dom2-init">
	<!--  create a DOM 2 version of subjects.xsl  -->
    <!--
	<exec executable="sed" output="${build.dir}/dom2-subjects.xsl">
		<arg line="'{s/dom1.dtd/dom2.dtd/;s/Level-1/Level-2/;}' ${transforms.dir}/subjects.xsl"/>
	</exec>
    -->

	<style in="${specs.dir}/Level-2/xml/core/dom-spec.xml"
	       out="${build.dir}/dom2-core-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-Core/core"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 Core Specification"/>
    </style>

	<style in="${specs.dir}/Level-2/xml/views/dom-spec.xml"
	       out="${build.dir}/dom2-views-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-Views/views"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 Views Specification"/>
    </style>

	<style in="${specs.dir}/Level-2/xml/events/dom-spec.xml"
	       out="${build.dir}/dom2-events-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-Events/events"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 Events Specification"/>
    </style>
    <!--
    Entities, probably defined in traversal-range/dom-spec.xml, not defined
	<style in="${specs.dir}/Level-2/xml/traversal-range/traversal.xml"
	       out="${build.dir}/dom2-traversal-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 Traversal Specification
"/>
    </style>
	<style in="${specs.dir}/Level-2/xml/traversal-range/range.xml"
	       out="${build.dir}/dom2-range-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/range"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 Range Specification
"/>
    </style>
    -->
	<style in="${specs.dir}/Level-2/xml/html/dom-spec.xml"
	       out="${build.dir}/dom2-html-subjects.xml"
	       style="${transforms.dir}/subjects.xsl">
           <param name="specURI" expression="http://www.w3.org/TR/DOM-Level-2-HTML/html"/>
           <param name="specTitle" expression="Document Object Model (DOM) Level 2 HTML Specification
"/>
    </style>
</target>



<target name="dom2-interfaces" depends="dom2-init">
	<style in="${specs.dir}/Level-2/xml/core/dom-spec.xml"
	       out="${build.dir}/dom2-interfaces.xml"
	       style="${transforms.dir}/dom2-combine.xsl"/>
	<xmlvalidate file="${build.dir}/dom2-interfaces.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<style in="${specs.dir}/Level-2/xml/core/dom-spec.xml"
	       out="${build.dir}/dom2-core-interfaces.xml"
	       style="${transforms.dir}/extract.xsl"/>

</target>



<target name="dom1-core-validate-tests" depends="dom1-dtd">
	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level1/core" includes="*.xml" 
		    excludes="attrsetvaluenomodificationallowederr.xml,attrsetvaluenomodificationallowederrEE.xml"/>  
	</xmlvalidate>
</target>

<target name="dom1-core-validate-files" depends="get-xhtml1-dtd">
    <copy todir="${tests.dir}/level1/core/files">
		<fileset dir="${lib.dir}/xhtml1-dtd"/>
    </copy>

	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level1/core/files" includes="*.xml" excludes="nodtdstaff.xml"/>  
	</xmlvalidate>
</target>

<target name="dom1-core-gen-java" depends="dom1-interfaces, dom1-dtd">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level1/core"/>


    <!--  a prefabricated documentcreatecdatasection.java
             is provided since some versions of Xalan-J
                   will stall when processing it    -->
    <copy file="${tests.dir}/level1/core/documentcreatecdatasection.java" 
            todir="${java.build.dir}/org/w3c/domts/level1/core"/>


	<style basedir="${tests.dir}/level1/core" 
		   destdir="${java.build.dir}/org/w3c/domts/level1/core" 
		   includes="*.xml" 
           excludes="metadata.xml,documentcreatecdatasection.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level1.core"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
	</style>


</target>

<target name="dom1-html-validate-tests" depends="dom1-dtd">
	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level1/html" includes="*.xml"/>  
        <fileset dir="${tests.dir}/submittedtests/netscapeHTML" includes="*.xml"/>
	</xmlvalidate>
</target>


<target name="dom1-html-validate-files" depends="get-xhtml1-dtd">
    <copy todir="${tests.dir}/level1/html/files">
		<fileset dir="${lib.dir}/xhtml1-dtd"/>
    </copy>

	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level1/html/files" includes="*.xml" excludes="nodtdstaff.xml"/>  
	</xmlvalidate>
</target>


<target name="dom1-html-gen-java" depends="dom1-interfaces,dom1-dtd">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level1/html"/>
	<style basedir="${tests.dir}/level1/html" 
		   destdir="${java.build.dir}/org/w3c/domts/level1/html" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level1.html"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/html/"/>
	</style>
	<style basedir="${tests.dir}/submittedtests/netscapeHTML" 
		   destdir="${java.build.dir}/org/w3c/domts/level1/html" 
		   includes="*.xml" 
           excludes="metadata.xml,xml_alltests.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level1.html"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/html/"/>
	</style>

</target>

<target name="dom1-html-javac" depends="common-javac,dom1-html-gen-java">
	<javac srcdir="${java.build.dir}/org/w3c/domts/level1/html" 
		destdir="${java.build.dir}" 
		classpath="${java.build.dir};${jaxp.jar}"
        debug="on"
		encoding="UTF8"/>
</target>

<target name="dom1-html-jar" depends="dom1-html-javac">
	<!--  will need to provide a manifest    -->
	<jar jarfile="${build.dir}/dom1-html.jar"  manifest="java/dom1-html.mf">
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/level1/html/*"
		         excludes="*.bak"/>
		<fileset dir="tests/level1/html/files" excludes="*.bak"/>
		<fileset dir="java"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
	</jar>
</target>

<target name="dom1-html-gen-jsunit" depends="dom1-interfaces,dom1-dtd,get-xhtml1-dtd">
    <mkdir dir="${build.dir}/level1/html/ecmascript/tests/applets/org/w3c/domts"/>
	<copy file="ecmascript/DOMTestCase.js" todir="${build.dir}/level1/html/ecmascript/tests"/>
    <copy todir="${build.dir}/level1/html/ecmascript/tests">
		<fileset dir="tests/level1/html/files" excludes="*.bak"/>
    </copy>
    <!--  copy XHTML 1.0 DTD's to output directory   -->
    <copy todir="${build.dir}/level1/html/ecmascript/tests">
		<fileset dir="${lib.dir}/xhtml1-dtd"/>
    </copy>
    <!--  copy simple Java 1.1 applet to satisfy applet test cases -->
    <copy todir="${build.dir}/level1/html/ecmascript/tests/applets/org/w3c/domts">
        <fileset dir="java/applets/org/w3c/domts/DOMTSApplet.class"/>
    </copy>
       

	<style basedir="${tests.dir}/level1/html" 
		   destdir="${build.dir}/level1/html/ecmascript/tests" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-jsunit.xsl" 
	       extension=".html">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/html/"/>
	</style>
</target>



<target name="jsunit-get" depends="init" unless="jsunit-available">
	<get src="http://www.edwardh.com/jsunit/jsunit.zip"
		dest="${lib.dir}/jsunit.zip"
		usetimestamp="yes"/>
</target>


<target name="dom1-core-gen-jsunit" depends="dom1-interfaces,dom1-dtd,get-xhtml1-dtd">
    <mkdir dir="${build.dir}/level1/core/ecmascript/tests"/>
	<copy file="ecmascript/DOMTestCase.js" todir="${build.dir}/level1/core/ecmascript/tests"/>
    <copy todir="${build.dir}/level1/core/ecmascript/tests">
		<fileset dir="tests/level1/core/files" excludes="*.bak"/>
    </copy>
    <copy todir="${build.dir}/level1/core/ecmascript/tests">
        <fileset dir="${lib.dir}/xhtml1-dtd"/>
    </copy>

	<style basedir="${tests.dir}/level1/core" 
		   destdir="${build.dir}/level1/core/ecmascript/tests" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-jsunit.xsl" 
	       extension=".html">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
	</style>
</target>


<target name="dom1-core-gen-browser" depends="dom1-interfaces,dom1-dtd">
    <mkdir dir="${build.dir}/level1/core/ecmascript/browser"/>
	<copy file="ecmascript/DOMTestCase.js" todir="${build.dir}/level1/core/ecmascript/browser"/>
    <copy todir="${build.dir}/level1/core/ecmascript/browser">
		<fileset dir="tests/level1/core/files" excludes="*.bak"/>
    </copy>

	<style basedir="${tests.dir}/level1/core" 
		   destdir="${build.dir}/level1/core/ecmascript/browser" 
		   includes="attrcreatedocumentfragment.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-browser.xsl" 
	       extension=".html">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
	</style>
</target>


<target name="dom1-core-gen-ecmascript" depends="dom1-interfaces">
    <mkdir dir="${build.dir}/ecmascript/level1/core"/>

    <!--  a prefabricated documentcreatecdatasection.js
             is provided since some versions of Xalan-J
                   will stall when processing it    -->
    <copy file="${tests.dir}/level1/core/documentcreatecdatasection.js" 
            todir="${build.dir}/ecmascript/level1/core"/>

	<style basedir="${tests.dir}/level1/core" 
		   destdir="${build.dir}/ecmascript/level1/core" 
		   includes="*.xml" 
           excludes="metadata.xml,documentcreatecdatasection.xml"
	       style="${transforms.dir}/test-to-ecmascript.xsl" 
	       extension=".js">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom1-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level1/core/"/>
	</style>
</target>


<target name="common-javac" depends="init">
	<mkdir dir="${java.build.dir}"/>
	<javac srcdir="java/org/w3c/domts" 
		   destdir="${java.build.dir}" 
		   classpath="${java.build.dir}"
           debug="on"
		   encoding="UTF8"/>
</target>

<target name="dom1-core-javac" depends="common-javac,dom1-core-gen-java">
	<javac srcdir="${java.build.dir}/org/w3c/domts/level1/core" 
		destdir="${java.build.dir}" 
		classpath="${java.build.dir};${jaxp.jar}"
        debug="on"
		encoding="UTF8"/>
</target>

<target name="dom1-core-jar" depends="dom1-core-javac,get-xhtml1-dtd">
    
	<jar jarfile="${build.dir}/dom1-core.jar" manifest="java/dom1-core.mf">
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/level1/core/*"
		         excludes="*.bak"/>
		<fileset dir="tests/level1/core/files" excludes="*.bak"/>
		<fileset dir="java"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
        <fileset dir="${lib.dir}/xhtml1-dtd"/>
	</jar>
</target>

<target name="dom1-core-javadoc" depends="dom1-core-gen-java">
    <mkdir dir="${build.dir}/javadoc"/>
    <javadoc packagenames="org.w3c.domts.*"
             sourcepath="java/org/w3c/domts/level1/core;java/junit;${lib.dir}/junit3.7/junit.jar;${lib.dir}/testlet.dir"
             destdir="${build.dir}/javadoc"
             author="true"
             version="true"
             use="true"
             windowtitle="DOM Test Suite"
             bottom="Copyright &#169; 2001 World Wide Web Consortium.">
             <group title="Test Suite Framework" packages="org.w3c.domts"/>
             <group title="DOM Level 1 Core" packages="org.w3c.domts.level1.core"/>
             <group title="DOM Level 2 Core" packages="org.w3c.domts.level2.core"/>
    </javadoc>
</target>

<target name="dom1-core-doxygen" depends="dom1-core-gen-java">
    <mkdir dir="${build.dir}/level1/core/doxygen"/>

    <!--  doxygen must be on path  
          download from http://www.doxygen.org    -->
    <exec executable="doxygen">
        <arg line="doxygen/dom1-core.doxygen"/>
    </exec>

</target>


<target name="dom2-core-validate-tests" depends="dom2-dtd">
	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level2/core" includes="*.xml"/>  
	</xmlvalidate>
</target>

<target name="dom2-html-validate-tests" depends="dom2-dtd">
	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level2/html" includes="*.xml"/>  
	</xmlvalidate>
</target>

<target name="dom2-events-validate-tests" depends="dom2-dtd">
	<xmlvalidate lenient="no" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser">
		<fileset dir="${tests.dir}/level2/events" includes="*.xml"/>  
	</xmlvalidate>
</target>


<target name="dom2-core-gen-java" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level2/core"/>

    <!--  a prefabricated importNode02.java and others
             are provided since some versions of Xalan-J
                   will stall when processing it    -->
    <copy file="${tests.dir}/level2/core/importNode02.java" 
            todir="${java.build.dir}/org/w3c/domts/level2/core"/>

    <copy file="${tests.dir}/level2/core/ownerDocument01.java" 
            todir="${java.build.dir}/org/w3c/domts/level2/core"/>

	<style basedir="${tests.dir}/level2/core" 
		   destdir="${java.build.dir}/org/w3c/domts/level2/core" 
		   includes="*.xml" 
           excludes="metadata.xml,importNode02.xml,ownerDocument01.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level2.core"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/core/"/>
	</style>
</target>

<target name="dom2-core-gen-ecmascript" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/ecmascript/level2/core"/>
	<style basedir="${tests.dir}/level2/core" 
		   destdir="${build.dir}/ecmascript/level2/core" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-ecmascript.xsl" 
	       extension=".js">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/core/"/>
	</style>
</target>

<target name="dom2-core-gen-jsunit" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/level2/core/ecmascript/tests"/>
	<copy file="ecmascript/DOMTestCase.js" todir="${build.dir}/level2/core/ecmascript/tests"/>
    <copy todir="${build.dir}/level2/core/tests">
		<fileset dir="tests/level2/core/files" excludes="*.bak"/>
    </copy>

	<style basedir="${tests.dir}/level2/core" 
		   destdir="${build.dir}/level2/core/ecmascript/tests" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-jsunit.xsl" 
	       extension=".html">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/core/"/>
	</style>
</target>

<target name="dom2-html-gen-java" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level2/html"/>
	<style basedir="${tests.dir}/level2/html" 
		   destdir="${java.build.dir}/org/w3c/domts/level2/html" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level2.html"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/html/"/>
        <param name="import-html" expression="import org.w3c.dom.html2.*;"/>
	</style>
</target>


<target name="dom2-html-gen-ecmascript" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/level2/html/ecmascript/tests"/>
	<style basedir="${tests.dir}/level2/html" 
		   destdir="${build.dir}/level2/html/ecmascript/tests" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-ecmascript.xsl" 
	       extension=".js">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/html/"/>
	</style>
</target>

<target name="dom2-html-gen-jsunit" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/level2/html/ecmascript/tests"/>
	<copy file="ecmascript/DOMTestCase.js" todir="${build.dir}/level2/html/ecmascript/tests"/>
    <copy todir="${build.dir}/level2/html/ecmascript/tests">
		<fileset dir="tests/level2/html/files" excludes="*.bak"/>
    </copy>

	<style basedir="${tests.dir}/level2/html" 
		   destdir="${build.dir}/level2/html/ecmascript/tests" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-jsunit.xsl" 
	       extension=".html">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/html/"/>
	</style>
</target>

<target name="dom2-events-gen-java" depends="dom2-interfaces,dom2-dtd">
    <mkdir dir="${build.dir}/java/org/w3c/domts/level2/events"/>

	<style basedir="${tests.dir}/level2/events" 
		   destdir="${java.build.dir}/org/w3c/domts/level2/events" 
		   includes="*.xml" 
           excludes="metadata.xml"
	       style="${transforms.dir}/test-to-java.xsl" 
	       extension=".java">
		<param name="interfaces-docname"
		       expression="../${build.dir}/dom2-interfaces.xml"/>
		<param name="package"
		       expression="org.w3c.domts.level2.events"/>
		<param name="target-uri-base"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/events/"/>
	</style>
</target>


<target name="dom2-core-javac" depends="common-javac,dom2-core-gen-java">
	<javac srcdir="${java.build.dir}/org/w3c/domts/level2/core" 
		destdir="${java.build.dir}" 
		classpath="${java.build.dir};${jaxp.jar}"
        debug="on"
		encoding="UTF8"/>
</target>

<target name="dom2-html-javac" depends="common-javac,dom2-html-gen-java">
	<javac srcdir="${java.build.dir}/org/w3c/domts/level2/html" 
		destdir="${java.build.dir}" 
		classpath="${java.build.dir};${jaxp.jar}"
        debug="on"
		encoding="UTF8">  
        <src path="${java.build.dir}"/>
        <src path="${specs.dir}/Level-2/HTML/java"/>
        <include name="org/w3c/domts/*"/>
        <include name="org/w3c/domts/level2/html/*"/>
        <include name="org/w3c/dom/**"/>
    </javac>
</target>

<target name="dom2-html-jar" depends="dom2-html-javac">
	<jar jarfile="${build.dir}/dom2-html.jar"  manifest="java/dom2-html.mf">
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/level2/html/*"
		         excludes="*.bak"/>
		<fileset dir="tests/level2/html/files" excludes="*.bak"/>
		<fileset dir="java"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
	</jar>
</target>


<target name="dom2-events-javac" depends="common-javac,dom2-events-gen-java">

	<javac 
		destdir="${java.build.dir}" 
		classpath="${java.build.dir};${jaxp.jar}"
        debug="on"
		encoding="UTF8">
        <src path="${java.build.dir}"/>
        <src path="${specs.dir}/Level-2/Events/java"/>
        <src path="${specs.dir}/Level-2/Views/java"/>
        <include name="org/w3c/domts/*"/>
        <include name="org/w3c/domts/level2/events/*"/>
        <include name="org/w3c/dom/**"/>
    </javac>
</target>

<target name="dom2-core-jar" depends="dom2-core-javac">
	<!--  will need to provide a manifest    -->
	<jar jarfile="${build.dir}/dom2-core.jar"  manifest="java/dom2-core.mf">
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/level2/core/*"
		         excludes="*.bak"/>
		<fileset dir="tests/level2/core/files" excludes="*.bak"/>
		<fileset dir="java"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
	</jar>
</target>

<target name="dom2-events-jar" depends="dom2-events-javac">
	<!--  will need to provide a manifest    -->
	<jar jarfile="${build.dir}/dom2-events.jar"  manifest="java/dom2-events.mf">
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
		<fileset dir="${java.build.dir}"
		         includes="org/w3c/domts/level2/events/*"
		         excludes="*.bak"/>
		<fileset dir="tests/level2/events/files" excludes="*.bak"/>
		<fileset dir="java"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
	</jar>
</target>



<target name="dom2-core-doxygen" depends="dom2-core-gen-java">
    <mkdir dir="${build.dir}/doxygen/level2"/>

    <!--  doxygen must be on path  
          download from http://www.doxygen.org    -->
    <exec executable="doxygen">
        <arg line="doxygen/dom2-core.doxygen"/>
    </exec>

</target>

<target name="get-junit-license" depends="init" unless="junit-license-available">
    <get src="http://oss.software.ibm.com/developerworks/opensource/license10.html"
         dest="${lib.dir}/junit-license.html"/>
</target>


<target name="get-junit" depends="init" unless="junit-available">
	<!--  get JUnit 3.7 into lib directory  -->
	<get src="http://download.sourceforge.net/junit/junit3.7.zip"
		dest="${lib.dir}/junit.zip"
        ignoreerrors="yes"
		usetimestamp="yes"/>
</target>

<target name="junit-run" depends="common-javac,get-junit">
	<unzip src="${lib.dir}/junit.zip" dest="${lib.dir}"/>

    <copy file="${lib.dir}/junit3.7/junit.jar" todir="${build.dir}"/>

    <mkdir dir="${java.build.dir}/junit"/>

    <javac srcdir="java/junit/org/w3c/domts"
           destdir="${java.build.dir}/junit"
           classpath="${lib.dir}/junit3.7/junit.jar;${java.build.dir}"           
           debug="on"
		   encoding="UTF8"/>


    <jar jarfile="${build.dir}/junit-run.jar"
        manifest="java/junit/junit-run.mf">
        <fileset dir="${java.build.dir}/junit"
	         includes="org/w3c/domts/**" excludes="*.bak"/>
    </jar>
</target>

<target name="avalon-get" depends="init" unless="avalon-available">
    <!--  Download a nightly build of Avalon testlet source
              No binaries available since project was suspended  -->
	<get src="http://jakarta.apache.org/builds/jakarta-avalon/nightly/2001-10-31/jakarta-avalon-testlet-src.zip"
	     dest="${lib.dir}/avalon.zip"
	     usetimestamp="yes"/>
</target>

<target name="avalon-run" depends="common-javac,avalon-get">
	<!--  get Avalon into lib directory  -->
	<mkdir dir="${java.build.dir}/avalon"/>


    <!--    unzip source   -->
	<unzip src="${lib.dir}/avalon.zip" dest="${lib.dir}"/>

    

    <!--    compile java files   -->
    <ant antfile="build.xml" 
         dir="${lib.dir}/jakarta-avalon-testlet/"         
         target="compile"/>

    <!--   build jar file (done here since task build.xml is not compatible with current Ant) -->
	<jar jarfile="${lib.dir}/testlet.jar">
        <fileset dir="${lib.dir}/jakarta-avalon-testlet/build/classes"
                 includes="org/apache/testlet/**" />
        <zipfileset src="${lib.dir}/jakarta-avalon-testlet/lib/clutil.jar" includes="**/*.class"/>
	</jar>

    <copy file="${lib.dir}/testlet.jar" todir="${build.dir}"/>


	<javac srcdir="java/avalon/org/w3c/domts"
	       destdir="${java.build.dir}/avalon"
	       classpath="${lib.dir}/testlet.jar;${java.build.dir}"	       
           debug="on"
		   encoding="UTF8"/>

	<jar jarfile="${build.dir}/avalon-run.jar"
	     manifest="java/avalon/avalon-run.mf">
		<fileset dir="${java.build.dir}/avalon"
		         includes="org/w3c/domts/*" excludes="*.bak"/>
	</jar>
</target>

<target name="dom2-core-metadata" depends="dom2-dtd">
    <mkdir dir="${build.dir}"/>
	<style in="${tests.dir}/level2/core/alltests.xml" 
		   out="${build.dir}/dom2-core-metadata.rdf" 
	       style="${transforms.dir}/combine-metadata.xsl">
		<param name="baseURI"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/level2/core/"/>
        <param name="externalMetadata" expression="metadata.xml"/>
	</style>
</target>


<target name="dom2-core-matrix" depends="dom2-core-metadata,dom2-subjects,dom2-interfaces">
    <mkdir dir="${build.dir}"/>
	<style in="${build.dir}/dom2-core-metadata.rdf" 
		   out="${build.dir}/dom2-core-matrix.html" 
	       style="${transforms.dir}/test-matrix.xsl">
		<param name="specURI"
		       expression="http://www.w3.org/TR/DOM-Level-2-Core/core#"/>
        <param name="interfacesURL" expression="dom2-core-interfaces.xml"/>
        <param name="specMetadataURL" expression="dom2-core-subjects.xml"/>
        <param name="title" expression="DOM Level 2 Core Test Suite Matrix"/>
	</style>
</target>


<target name="dom2-core-dist" depends="dom2-core-jar,dom2-core-gen-jsunit,dom2-core-doxygen,junit-run,get-junit-license,dom2-schema,dom2-core-matrix">
    <mkdir dir="${build.dir}/level2/core/resources"/>
    <mkdir dir="${build.dir}/level2/core/java"/>
    <copy file="docs/level2/core/index.htm" todir="${build.dir}/level2/core"/>
    <copy todir="${build.dir}/level2/core/resources">
        <fileset dir="docs/level2/core/resources" excludes="*.bak"/>
    </copy>
    <copy file="${build.dir}/dom2-core.jar" todir="${build.dir}/level2/core/java"/>
    <copy file="${build.dir}/junit-run.jar" todir="${build.dir}/level2/core/java"/>
    <copy file="${lib.dir}/junit3.7/junit.jar" todir="${build.dir}/level2/core/java"/>
    <copy file="${lib.dir}/junit-license.html" todir="${build.dir}/level2/core/java"/>
    <copy file="${lib.dir}/jsunit/testRunner.html" todir="${build.dir}/level2/core/ecmascript"/>
    <mkdir dir="${build.dir}/level2/core/ecmascript/app"/>
    <copy todir="${build.dir}/level2/core/ecmascript/app">
        <fileset dir="${lib.dir}/jsunit/app" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level2/core/ecmascript/images"/>
    <copy todir="${build.dir}/level2/core/ecmascript/images">
        <fileset dir="${lib.dir}/jsunit/images" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level2/core/ecmascript/docs"/>
    <copy todir="${build.dir}/level2/core/ecmascript/docs">
        <fileset dir="${lib.dir}/jsunit/docs" excludes="*.bak"/>
    </copy>
    <mkdir dir="${build.dir}/level2/core/ecmascript/jsunit-self-tests"/>
    <copy todir="${build.dir}/level2/core/ecmascript/jsunit-self-tests">
        <fileset dir="${lib.dir}/jsunit/tests" excludes="*.bak"/>
    </copy>
    <copy file="${build.dir}/dom2-core-matrix.html" todir="${build.dir}/level2/core"/>


    <mkdir dir="${build.dir}/level2/core/tests/files"/>
    <copy todir="${build.dir}/level2/core/tests">
        <fileset dir="${tests.dir}/level2/core" includes="*.xml"/>
        <fileset dir="${build.dir}" includes="dom2.dtd"/>
        <fileset dir="${build.dir}" includes="dom2.xsd"/>
        <fileset dir="${transforms.dir}" includes="test-to-html.xsl"/>
    </copy>
    <copy todir="${build.dir}/level2/core/tests/files">
        <fileset dir="${tests.dir}/level2/core/files" excludes="*.bak"/>
    </copy>

    <mkdir dir="${dist.dir}"/>
    <zip  zipfile="${dist.dir}/dom2-core.zip" basedir="${build.dir}/level2/core"/>
    <tar tarfile="${dist.dir}/dom2-core.tar" basedir="${build.dir}/level2/core"/>
    <gzip src="${dist.dir}/dom2-core.tar" zipfile="${dist.dir}/dom2-core.tar.gz"/>
        
        
</target>


<target name="clean" depends="init">
	<delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete file="tests\level1\core\dom1.dtd"/>
    <delete file="tests\level1\core\dom1.xsd"/>
    <delete file="tests\level2\core\dom2.dtd"/>
    <delete file="tests\level2\core\dom2.xsd"/>
</target>

<target name="dom3-available" depends="init">
    <available property="dom3-core-available" file="${specs.dir}/DOM3-Core.zip"/>
    <available property="dom3-asls-available" file="${specs.dir}/DOM3-ASLS.zip"/>
    <available property="dom3-xpath-available" file="${specs.dir}/DOM3-XPath.zip"/>
    <available property="dom3-events-available" file="${specs.dir}/DOM3-Events.zip"/>
    <available property="dom3-views-available" file="${specs.dir}/DOM3-Views.zip"/>
</target>

<target name="get-dom3-core" depends="dom3-available" unless="dom3-core-available">
	<!--   download DOM 3 Core spec to specs directory   -->
	<get src="http://www.w3.org/TR/2002/WD-DOM-Level-3-Core-20020409/DOM3-Core.zip"
		dest="${specs.dir}/DOM3-Core.zip"
		usetimestamp="yes"/>
</target>

<target name="get-dom3-asls" depends="dom3-available" unless="dom3-asls-available">
	<get src="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/DOM3-ASLS.zip"
		dest="${specs.dir}/DOM3-ASLS.zip"
		usetimestamp="yes"/>
</target>

<target name="get-dom3-xpath" depends="dom3-available" unless="dom3-xpath-available">
	<get src="http://www.w3.org/TR/2002/WD-DOM-Level-3-XPath-20020328/DOM3-XPath.zip"
		dest="${specs.dir}/DOM3-XPath.zip"
		usetimestamp="yes"/>
</target>

<target name="get-dom3-events" depends="dom3-available" unless="dom3-events-available">
	<get src="http://www.w3.org/TR/2002/WD-DOM-Level-3-Events-20020208/DOM3-Events.zip"
		dest="${specs.dir}/DOM3-Events.zip"
		usetimestamp="yes"/>
</target>


<target name="get-dom3-views" depends="dom3-available" unless="dom3-views-available">
	<get src="http://www.w3.org/TR/2000/WD-DOM-Level-3-Views-20001115/DOM3-Views.zip"
		dest="${specs.dir}/DOM3-Views.zip"
		usetimestamp="yes"/>
</target>


<target name="get-dom3" depends="get-dom3-core,get-dom3-asls,get-dom3-xpath,get-dom3-events,get-dom3-views">
</target>

<target name="dom3-init" depends="init,get-dom3">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/Level-3"/>

	<unzip src="${specs.dir}/DOM3-Views.zip"
	       dest="${specs.dir}/Level-3/Views"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-3/Views/xml-source.zip"
	       dest="${specs.dir}/Level-3/xml/views"/>

	<unzip src="${specs.dir}/DOM3-XPath.zip"
	       dest="${specs.dir}/Level-3/XPath"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-3/XPath/xml-source.zip"
	       dest="${specs.dir}/Level-3/xml/xpath"/>



	<unzip src="${specs.dir}/DOM3-Events.zip"
	       dest="${specs.dir}/Level-3/Events"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-3/Events/xml-source.zip"
	       dest="${specs.dir}/Level-3/xml/events"/>




	<unzip src="${specs.dir}/DOM3-ASLS.zip"
	       dest="${specs.dir}/Level-3/ASLS"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-3/ASLS/xml-source.zip"
	       dest="${specs.dir}/Level-3/xml/as-ls"/>

	<unzip src="${specs.dir}/DOM3-Core.zip"
	       dest="${specs.dir}/Level-3/Core"/>
	<!--  XML source has unusual ../../whatever paths,
	        must put in several layers deep to prevent writing out
			of build tree   -->
	<unzip src="${specs.dir}/Level-3/Core/xml-source.zip"
	       dest="${specs.dir}/Level-3/xml/core"/>


    <!--   These files are missing   -->
	<echo file="${specs.dir}/Level-3/xml/status.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

	<echo file="${specs.dir}/Level-3/xml/toc.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

	<echo file="${specs.dir}/Level-3/xml/as-ls/definitions/as-constants.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

	<echo file="${specs.dir}/Level-3/xml/as-ls/definitions/asw-named-object-map.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

	<echo file="${specs.dir}/Level-3/xml/as-ls/definitions/as-named-object-map.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>

    <echo file="${specs.dir}/Level-3/xml/events/definitions/textevent.xml"
	      message="&lt;?xml version='1.0'  encoding='UTF-8'?&gt;"/>


    <delete file="${specs.dir}/Level-3/xml/core/definitions/element.xml.orig"/>

    <!--   this patch is needed so the parameter names are the same
               for getElementsByTagName    -->
	<patch patchfile="./patches/level-3-element.patch"
	       originalfile="${specs.dir}/Level-3/xml/core/definitions/element.xml"/>

    <!--   these patches are missing entity declarations
             and similar issues that should be fixed    -->
<!--
	<patch patchfile="./patches/level-3-version.patch"
	       originalfile="${specs.dir}/Level-3/xml/version.xml"/>

	<patch patchfile="./patches/level-3-part-entities.patch"
	       originalfile="${specs.dir}/Level-3/xml/part-entities.xml"/>

    <patch patchfile="./patches/level-3-core-dom-spec.patch"
           originalfile="${specs.dir}/Level-3/xml/core/dom-spec.xml"/>
-->
</target>

<target name="dom3-interfaces" depends="dom3-init">
    <delete file="${build.dir}/dom3-interfaces.xml"/>

	<style in="${specs.dir}/Level-3/xml/core/dom-spec.xml"
	       out="${build.dir}/dom3-interfaces.xml"
	       style="${transforms.dir}/dom3-combine.xsl"/>
	<xmlvalidate file="${build.dir}/dom3-interfaces.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>
</target>

<target name="dom3-schema" depends="dom3-interfaces">
	<style in="${build.dir}/dom3-interfaces.xml"
	       out="${build.dir}/_dom3.xsd"
	       style="${transforms.dir}/dom-to-xsd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-3"/>
	</style>

	<!--  remove leading underscore from _xmlns attribute    -->
	<exec executable="sed" output="${build.dir}/dom3.xsd">
		<arg line="-e 's/_xmlns/xmlns/g' -e 's/xmlns_test/xmlns:test/g'  ${build.dir}/_dom3.xsd"/>
	</exec>
	<delete file="${build.dir}/_dom3.xsd"/>
</target>

<target name="dom3-dtd" depends="dom3-interfaces">
	<style in="${build.dir}/dom3-interfaces.xml"
	       out="${build.dir}/dom3.dtd"
	       style="${transforms.dir}/dom-to-dtd.xsl">
		<param name="schema-namespace"
		   expression="http://www.w3.org/2001/DOM-Test-Suite/Level-3"/>
	</style>
    <!--  can't copy until we no longer need human editing  -->
	<!-- copy file="${build.dir}/dom3.dtd" todir="${tests.dir}/level3/core"/ -->
</target>

<target name="dom3-subjects" depends="dom3-init">
	<!--  create a DOM 2 version of subjects.xsl  -->
	<exec executable="sed" output="${build.dir}/dom3-subjects.xsl">
		<arg line="'{s/dom1.dtd/dom3.dtd/;s/Level-1/Level-3/;}' ${transforms.dir}/subjects.xsl"/>
	</exec>

	<style in="${specs.dir}/Level-3/xml/core/dom-spec.xml"
	       out="${build.dir}/dom3-core-subjects.xml"
	       style="${build.dir}/dom3-subjects.xsl"/>
	<style in="${specs.dir}/Level-3/xml/views/dom-spec.xml"
	       out="${build.dir}/dom3-views-subjects.xml"
	       style="${build.dir}/dom3-subjects.xsl"/>
	<style in="${specs.dir}/Level-3/xml/events/dom-spec.xml"
	       out="${build.dir}/dom3-events-subjects.xml"
	       style="${build.dir}/dom3-subjects.xsl"/>
	<style in="${specs.dir}/Level-3/xml/xpath/dom-spec.xml"
	       out="${build.dir}/dom3-xpath-subjects.xml"
	       style="${build.dir}/dom3-subjects.xsl"/>
	<style in="${specs.dir}/Level-3/xml/asls/dom-spec.xml"
	       out="${build.dir}/dom3-asls-subjects.xml"
	       style="${build.dir}/dom3-subjects.xsl"/>
	<!--  remove DOM 2 version of subjects.xsl  -->
	<delete file="{build.dir}/dom3-subjects.xsl"/>
</target>

<target name="svg-available" depends="init">
    <available property="svg-available" file="${specs.dir}/SVG.zip"/>
</target>

<target name="get-svg" depends="svg-available" unless="svg-available">
	<mkdir dir="${specs.dir}/SVG1.0"/>
	<!--   download SVG 1.0 Recommendation to specs directory   -->
	<get src="http://www.w3.org/TR/2001/REC-SVG-20010904/REC-SVG-20010904.zip"
		dest="${specs.dir}/SVG.zip"
		usetimestamp="yes"/>
</target>

<target name="svg-init" depends="get-svg">
	<mkdir dir="${specs.dir}"/>
	<mkdir dir="${specs.dir}/SVG1.0"/>


	<unzip src="${specs.dir}/SVG.zip" dest="${specs.dir}/SVG1.0"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/coords.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/coords.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/coords.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/animate.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/animate.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/animate.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/color.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/color.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/color.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/extend.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/extend.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/extend.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>


	<exec executable="sed" output="${specs.dir}/SVG1.0/interact.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/interact.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/interact.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/linking.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/linking.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/linking.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/masking.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/masking.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/masking.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/painting.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/painting.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/painting.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/paths.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/paths.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/paths.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/pservers.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/pservers.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/pservers.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/script.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/script.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/script.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/shapes.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/shapes.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/shapes.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/struct.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/struct.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/struct.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

<exec executable="sed" output="${specs.dir}/SVG1.0/types.xml">
		<arg line="-f patches/svgfix.sed ${specs.dir}/SVG1.0/types.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/types.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>


	<exec executable="sed" output="${specs.dir}/SVG1.0/text.xml">
		<arg line="-e'23,5269d' -f patches/svgfix.sed ${specs.dir}/SVG1.0/text.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/text.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>


	<exec executable="sed" output="${specs.dir}/SVG1.0/filters.xml">
		<arg line="-e'24,4785d' -f patches/svgfix.sed ${specs.dir}/SVG1.0/filters.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/filters.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

	<exec executable="sed" output="${specs.dir}/SVG1.0/styling.xml">
		<arg line="-e'23,1563d' -f patches/svgfix.sed ${specs.dir}/SVG1.0/styling.html"/>
	</exec>
	<xmlvalidate file="${specs.dir}/SVG1.0/styling.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>

</target>

<target name="svg-interfaces" depends="svg-init,dom2-interfaces">
	<style basedir="${specs.dir}/SVG1.0"
	       in="${specs.dir}/SVG1.0/coords.xml"
	       out="${build.dir}/svg-interfaces.xml"
	       style="${transforms.dir}/svg-to-interface.xsl">
		<param name="dom2-interfaces" expression="../${build.dir}/dom2-interfaces.xml"/>
	</style>
	<xmlvalidate file="${build.dir}/svg-interfaces.xml"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>
</target>

<target name="svg-schema" depends="svg-interfaces">
	<style in="${build.dir}/svg-interfaces.xml"
	       out="${build.dir}/_svg.xsd"
	       style="${transforms.dir}/dom-to-xsd.xsl">
		<param name="schema-namespace"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/SVG"/>
	</style>

	<!--  remove leading underscore from _xmlns attribute    -->
	<exec executable="sed" output="${build.dir}/svg.xsd">
		<arg line="-e 's/_xmlns/xmlns/g' -e 's/xmlns_test/xmlns:test/g'  ${build.dir}/_svg.xsd"/>
	</exec>
	<delete file="${build.dir}/_svg.xsd"/>
	<xmlvalidate file="${build.dir}/svg.xsd"
	             lenient="yes" failonerror="yes"
	             classname="org.apache.xerces.parsers.SAXParser"/>
</target>

<target name="svg-dtd" depends="svg-interfaces">
	<style in="${build.dir}/svg-interfaces.xml"
	       out="${build.dir}/svg.dtd"
	       style="${transforms.dir}/dom-to-dtd.xsl">
		<param name="schema-namespace"
		       expression="http://www.w3.org/2001/DOM-Test-Suite/SVG"/>
	</style>
	<!-- copy file="${build.dir}/svg.dtd" todir="${tests.dir}/svg"/ -->
</target>


</project> 
